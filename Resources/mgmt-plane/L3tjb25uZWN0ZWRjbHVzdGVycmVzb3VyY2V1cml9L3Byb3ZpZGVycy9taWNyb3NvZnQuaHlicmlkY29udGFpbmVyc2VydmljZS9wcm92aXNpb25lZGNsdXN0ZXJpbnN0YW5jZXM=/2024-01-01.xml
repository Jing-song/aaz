<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{connectedclusterresourceuri}/providers/microsoft.hybridcontainerservice/provisionedclusterinstances" version="2024-01-01" swagger="mgmt-plane/hybridaks/ResourceProviders/Microsoft.HybridContainerService/Paths/L3tjb25uZWN0ZWRDbHVzdGVyUmVzb3VyY2VVcml9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29udGFpbmVyU2VydmljZS9wcm92aXNpb25lZENsdXN0ZXJJbnN0YW5jZXM=/V/MjAyNC0wMS0wMQ=="/>
  <commandGroup name="hybrid-container-service provisioned-cluster-instance">
    <command name="list" version="2024-01-01">
      <resource id="/{connectedclusterresourceuri}/providers/microsoft.hybridcontainerservice/provisionedclusterinstances" version="2024-01-01" swagger="mgmt-plane/hybridaks/ResourceProviders/Microsoft.HybridContainerService/Paths/L3tjb25uZWN0ZWRDbHVzdGVyUmVzb3VyY2VVcml9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29udGFpbmVyU2VydmljZS9wcm92aXNpb25lZENsdXN0ZXJJbnN0YW5jZXM=/V/MjAyNC0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectedClusterResourceUri" options="connected-cluster-resource-uri" required="True">
          <help short="The fully qualified Azure Resource Manager identifier of the connected cluster resource."/>
        </arg>
      </argGroup>
      <operation operationId="provisionedClusterInstances_List">
        <http path="/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances">
          <request method="get">
            <path>
              <param type="string" name="connectedClusterResourceUri" arg="$Path.connectedClusterResourceUri" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop type="object" name="extendedLocation">
                        <prop type="string" name="name"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;CustomLocation&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop type="array<object>" name="agentPoolProfiles">
                          <item type="object">
                            <prop type="integer32" name="count">
                              <default value="1"/>
                            </prop>
                            <prop type="boolean" name="enableAutoScaling">
                              <default value="false"/>
                            </prop>
                            <prop readOnly="True" type="string" name="kubernetesVersion"/>
                            <prop type="integer32" name="maxCount"/>
                            <prop type="integer32" name="maxPods"/>
                            <prop type="integer32" name="minCount"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="nodeLabels">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="array<string>" name="nodeTaints">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="osSKU">
                              <enum>
                                <item value="&quot;CBLMariner&quot;"/>
                                <item value="&quot;Windows2019&quot;"/>
                                <item value="&quot;Windows2022&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="osType">
                              <default value="&quot;Linux&quot;"/>
                              <enum>
                                <item value="&quot;Linux&quot;"/>
                                <item value="&quot;Windows&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="vmSize"/>
                          </item>
                        </prop>
                        <prop type="object" name="autoScalerProfile">
                          <prop type="string" name="balance-similar-node-groups"/>
                          <prop type="string" name="expander">
                            <enum>
                              <item value="&quot;least-waste&quot;"/>
                              <item value="&quot;most-pods&quot;"/>
                              <item value="&quot;priority&quot;"/>
                              <item value="&quot;random&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="max-empty-bulk-delete"/>
                          <prop type="string" name="max-graceful-termination-sec"/>
                          <prop type="string" name="max-node-provision-time"/>
                          <prop type="string" name="max-total-unready-percentage"/>
                          <prop type="string" name="new-pod-scale-up-delay"/>
                          <prop type="string" name="ok-total-unready-count"/>
                          <prop type="string" name="scale-down-delay-after-add"/>
                          <prop type="string" name="scale-down-delay-after-delete"/>
                          <prop type="string" name="scale-down-delay-after-failure"/>
                          <prop type="string" name="scale-down-unneeded-time"/>
                          <prop type="string" name="scale-down-unready-time"/>
                          <prop type="string" name="scale-down-utilization-threshold"/>
                          <prop type="string" name="scan-interval"/>
                          <prop type="string" name="skip-nodes-with-local-storage"/>
                          <prop type="string" name="skip-nodes-with-system-pods"/>
                        </prop>
                        <prop type="object" name="cloudProviderProfile">
                          <prop type="object" name="infraNetworkProfile">
                            <prop type="array<ResourceId>" name="vnetSubnetIds">
                              <item type="ResourceId"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="object" name="clusterVMAccessProfile">
                          <prop type="string" name="authorizedIPRanges"/>
                        </prop>
                        <prop type="object" name="controlPlane">
                          <prop type="object" name="controlPlaneEndpoint">
                            <prop type="string" name="hostIP"/>
                          </prop>
                          <prop type="integer32" name="count">
                            <default value="1"/>
                          </prop>
                          <prop type="string" name="vmSize"/>
                        </prop>
                        <prop type="string" name="kubernetesVersion"/>
                        <prop type="object" name="licenseProfile">
                          <prop type="string" name="azureHybridBenefit">
                            <default value="&quot;NotApplicable&quot;"/>
                            <enum>
                              <item value="&quot;False&quot;"/>
                              <item value="&quot;NotApplicable&quot;"/>
                              <item value="&quot;True&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="linuxProfile">
                          <prop type="object" name="ssh">
                            <prop type="array<object>" name="publicKeys">
                              <item type="object">
                                <prop type="string" name="keyData"/>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="object" name="networkProfile">
                          <prop type="object" name="loadBalancerProfile">
                            <prop type="integer32" name="count">
                              <default value="0"/>
                            </prop>
                          </prop>
                          <prop type="string" name="networkPolicy">
                            <default value="&quot;calico&quot;"/>
                            <enum>
                              <item value="&quot;calico&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="podCidr"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Pending&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                            <item value="&quot;Upgrading&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="object" name="status">
                          <prop type="array<object>" name="controlPlaneStatus">
                            <item readOnly="True" type="object">
                              <prop type="string" name="errorMessage"/>
                              <prop type="string" name="name"/>
                              <prop type="string" name="phase">
                                <enum>
                                  <item value="&quot;deleting&quot;"/>
                                  <item value="&quot;failed&quot;"/>
                                  <item value="&quot;pending&quot;"/>
                                  <item value="&quot;provisioned&quot;"/>
                                  <item value="&quot;provisioning&quot;"/>
                                  <item value="&quot;provisioning {HelmChartInstalled}&quot;"/>
                                  <item value="&quot;provisioning {MSICertificateDownloaded}&quot;"/>
                                  <item value="&quot;upgrading&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="ready"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="string" name="currentState">
                            <enum>
                              <item value="&quot;Accepted&quot;"/>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Pending&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                              <item value="&quot;Upgrading&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="errorMessage"/>
                        </prop>
                        <prop type="object" name="storageProfile">
                          <prop type="object" name="nfsCsiDriver">
                            <prop type="boolean" name="enabled">
                              <default value="true"/>
                            </prop>
                          </prop>
                          <prop type="object" name="smbCsiDriver">
                            <prop type="boolean" name="enabled">
                              <default value="true"/>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
