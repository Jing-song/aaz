{"plane": "mgmt-plane", "resources": [{"id": "/{connectedclusterresourceuri}/providers/microsoft.hybridcontainerservice/provisionedclusterinstances/default", "version": "2024-01-01", "swagger": "mgmt-plane/hybridaks/ResourceProviders/Microsoft.HybridContainerService/Paths/L3tjb25uZWN0ZWRDbHVzdGVyUmVzb3VyY2VVcml9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29udGFpbmVyU2VydmljZS9wcm92aXNpb25lZENsdXN0ZXJJbnN0YW5jZXMvZGVmYXVsdA==/V/MjAyNC0wMS0wMQ=="}], "commandGroups": [{"name": "hybrid-container-service provisioned-cluster-instance default", "commands": [{"name": "show", "version": "2024-01-01", "resources": [{"id": "/{connectedclusterresourceuri}/providers/microsoft.hybridcontainerservice/provisionedclusterinstances/default", "version": "2024-01-01", "swagger": "mgmt-plane/hybridaks/ResourceProviders/Microsoft.HybridContainerService/Paths/L3tjb25uZWN0ZWRDbHVzdGVyUmVzb3VyY2VVcml9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29udGFpbmVyU2VydmljZS9wcm92aXNpb25lZENsdXN0ZXJJbnN0YW5jZXMvZGVmYXVsdA==/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.connectedClusterResourceUri", "options": ["connected-cluster-resource-uri"], "required": true, "help": {"short": "The fully qualified Azure Resource Manager identifier of the connected cluster resource."}}]}], "operations": [{"operationId": "provisionedClusterInstances_Get", "http": {"path": "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "connectedClusterResourceUri", "arg": "$Path.connectedClusterResourceUri", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "object", "name": "extendedLocation", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "CustomLocation"}]}}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "agentPoolProfiles", "item": {"type": "object", "props": [{"default": {"value": 1}, "type": "integer32", "name": "count"}, {"default": {"value": false}, "type": "boolean", "name": "enableAutoScaling"}, {"readOnly": true, "type": "string", "name": "kubernetesVersion"}, {"type": "integer32", "name": "maxCount"}, {"type": "integer32", "name": "maxPods"}, {"type": "integer32", "name": "minCount"}, {"type": "string", "name": "name"}, {"type": "object", "name": "nodeLabels", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "nodeTaints", "item": {"type": "string"}}, {"type": "string", "name": "osSKU", "enum": {"items": [{"value": "CBLMariner"}, {"value": "Windows2019"}, {"value": "Windows2022"}]}}, {"default": {"value": "Linux"}, "type": "string", "name": "osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "string", "name": "vmSize"}]}}, {"type": "object", "name": "autoScalerProfile", "props": [{"type": "string", "name": "balance-similar-node-groups"}, {"type": "string", "name": "expander", "enum": {"items": [{"value": "least-waste"}, {"value": "most-pods"}, {"value": "priority"}, {"value": "random"}]}}, {"type": "string", "name": "max-empty-bulk-delete"}, {"type": "string", "name": "max-graceful-termination-sec"}, {"type": "string", "name": "max-node-provision-time"}, {"type": "string", "name": "max-total-unready-percentage"}, {"type": "string", "name": "new-pod-scale-up-delay"}, {"type": "string", "name": "ok-total-unready-count"}, {"type": "string", "name": "scale-down-delay-after-add"}, {"type": "string", "name": "scale-down-delay-after-delete"}, {"type": "string", "name": "scale-down-delay-after-failure"}, {"type": "string", "name": "scale-down-unneeded-time"}, {"type": "string", "name": "scale-down-unready-time"}, {"type": "string", "name": "scale-down-utilization-threshold"}, {"type": "string", "name": "scan-interval"}, {"type": "string", "name": "skip-nodes-with-local-storage"}, {"type": "string", "name": "skip-nodes-with-system-pods"}]}, {"type": "object", "name": "cloudProviderProfile", "props": [{"type": "object", "name": "infraNetworkProfile", "props": [{"type": "array<ResourceId>", "name": "vnetSubnetIds", "item": {"type": "ResourceId"}}]}]}, {"type": "object", "name": "clusterVMAccessProfile", "props": [{"type": "string", "name": "authorizedIPRanges"}]}, {"type": "object", "name": "controlPlane", "props": [{"type": "object", "name": "controlPlaneEndpoint", "props": [{"type": "string", "name": "hostIP"}]}, {"default": {"value": 1}, "type": "integer32", "name": "count"}, {"type": "string", "name": "vmSize"}]}, {"type": "string", "name": "kubernetesVersion"}, {"type": "object", "name": "licenseProfile", "props": [{"default": {"value": "NotApplicable"}, "type": "string", "name": "azureHybridBenefit", "enum": {"items": [{"value": "False"}, {"value": "NotApplicable"}, {"value": "True"}]}}]}, {"type": "object", "name": "linuxProfile", "props": [{"type": "object", "name": "ssh", "props": [{"type": "array<object>", "name": "publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData"}]}}]}]}, {"type": "object", "name": "networkProfile", "props": [{"type": "object", "name": "loadBalancerProfile", "props": [{"default": {"value": 0}, "type": "integer32", "name": "count"}]}, {"default": {"value": "calico"}, "type": "string", "name": "networkPolicy", "enum": {"items": [{"value": "calico"}]}}, {"type": "string", "name": "podCidr"}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Pending"}, {"value": "Succeeded"}, {"value": "Updating"}, {"value": "Upgrading"}]}}, {"readOnly": true, "type": "object", "name": "status", "props": [{"type": "array<object>", "name": "controlPlaneStatus", "item": {"readOnly": true, "type": "object", "props": [{"type": "string", "name": "errorMessage"}, {"type": "string", "name": "name"}, {"type": "string", "name": "phase", "enum": {"items": [{"value": "deleting"}, {"value": "failed"}, {"value": "pending"}, {"value": "provisioned"}, {"value": "provisioning"}, {"value": "provisioning {HelmChartInstalled}"}, {"value": "provisioning {MSICertificateDownloaded}"}, {"value": "upgrading"}]}}, {"type": "boolean", "name": "ready"}]}}, {"readOnly": true, "type": "string", "name": "currentState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Pending"}, {"value": "Succeeded"}, {"value": "Updating"}, {"value": "Upgrading"}]}}, {"type": "string", "name": "errorMessage"}]}, {"type": "object", "name": "storageProfile", "props": [{"type": "object", "name": "nfsCsiDriver", "props": [{"default": {"value": true}, "type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "smbCsiDriver", "props": [{"default": {"value": true}, "type": "boolean", "name": "enabled"}]}]}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2024-01-01", "resources": [{"id": "/{connectedclusterresourceuri}/providers/microsoft.hybridcontainerservice/provisionedclusterinstances/default", "version": "2024-01-01", "swagger": "mgmt-plane/hybridaks/ResourceProviders/Microsoft.HybridContainerService/Paths/L3tjb25uZWN0ZWRDbHVzdGVyUmVzb3VyY2VVcml9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29udGFpbmVyU2VydmljZS9wcm92aXNpb25lZENsdXN0ZXJJbnN0YW5jZXMvZGVmYXVsdA==/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.connectedClusterResourceUri", "options": ["connected-cluster-resource-uri"], "required": true, "help": {"short": "The fully qualified Azure Resource Manager identifier of the connected cluster resource."}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "provisionedClusterInstances_Delete", "http": {"path": "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "connectedClusterResourceUri", "arg": "$Path.connectedClusterResourceUri", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [202], "header": {"items": [{"name": "Location"}]}}, {"statusCode": [204]}, {"statusCode": [200, 201]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2024-01-01", "resources": [{"id": "/{connectedclusterresourceuri}/providers/microsoft.hybridcontainerservice/provisionedclusterinstances/default", "version": "2024-01-01", "swagger": "mgmt-plane/hybridaks/ResourceProviders/Microsoft.HybridContainerService/Paths/L3tjb25uZWN0ZWRDbHVzdGVyUmVzb3VyY2VVcml9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29udGFpbmVyU2VydmljZS9wcm92aXNpb25lZENsdXN0ZXJJbnN0YW5jZXMvZGVmYXVsdA==/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.connectedClusterResourceUri", "options": ["connected-cluster-resource-uri"], "required": true, "help": {"short": "The fully qualified Azure Resource Manager identifier of the connected cluster resource."}}]}, {"name": "Properties", "args": [{"type": "array<object>", "var": "$provisionedClusterInstance.properties.agentPoolProfiles", "options": ["agent-pool-profiles"], "group": "Properties", "help": {"short": "The agent pool properties for the provisioned cluster."}, "item": {"type": "object", "args": [{"type": "integer32", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].count", "options": ["count"], "help": {"short": "Number of nodes in the agent pool. The default value is 1."}, "default": {"value": 1}}, {"type": "boolean", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].enableAutoScaling", "options": ["enable-auto-scaling"], "help": {"short": "Whether to enable auto-scaler. Default value is false"}, "default": {"value": false}}, {"type": "integer32", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].maxCount", "options": ["max-count"], "help": {"short": "The maximum number of nodes for auto-scaling"}}, {"type": "integer32", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].maxPods", "options": ["max-pods"], "help": {"short": "The maximum number of pods that can run on a node."}}, {"type": "integer32", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].minCount", "options": ["min-count"], "help": {"short": "The minimum number of nodes for auto-scaling"}}, {"type": "string", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].name", "options": ["name"], "help": {"short": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"}}, {"type": "object", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].nodeLabels", "options": ["node-labels"], "help": {"short": "The node labels to be persisted across all nodes in agent pool."}, "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].nodeTaints", "options": ["node-taints"], "help": {"short": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."}, "item": {"type": "string"}}, {"type": "string", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].osSKU", "options": ["os-sku"], "help": {"short": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."}, "enum": {"items": [{"name": "CBLMariner", "value": "CBLMariner"}, {"name": "Windows2019", "value": "Windows2019"}, {"name": "Windows2022", "value": "Windows2022"}]}}, {"type": "string", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].osType", "options": ["os-type"], "help": {"short": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'"}, "default": {"value": "Linux"}, "enum": {"items": [{"name": "Linux", "value": "Linux"}, {"name": "Windows", "value": "Windows"}]}}, {"type": "string", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].vmSize", "options": ["vm-size"], "help": {"short": "The VM sku size of the agent pool node VMs."}}]}}, {"type": "object", "var": "$provisionedClusterInstance.properties.autoScalerProfile", "options": ["auto-scaler-profile"], "group": "Properties", "help": {"short": "Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster."}, "args": [{"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.balance-similar-node-groups", "options": ["balance-similar-node-groups"], "help": {"short": "Valid values are 'true' and 'false'"}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.expander", "options": ["expander"], "help": {"short": "If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."}, "enum": {"items": [{"name": "least-waste", "value": "least-waste"}, {"name": "most-pods", "value": "most-pods"}, {"name": "priority", "value": "priority"}, {"name": "random", "value": "random"}]}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.max-empty-bulk-delete", "options": ["max-empty-bulk-delete"], "help": {"short": "The default is 10."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.max-graceful-termination-sec", "options": ["max-graceful-termination-sec"], "help": {"short": "The default is 600."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.max-node-provision-time", "options": ["max-node-provision-time"], "help": {"short": "The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.max-total-unready-percentage", "options": ["max-total-unready-percentage"], "help": {"short": "The default is 45. The maximum is 100 and the minimum is 0."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.new-pod-scale-up-delay", "options": ["new-pod-scale-up-delay"], "help": {"short": "For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.ok-total-unready-count", "options": ["ok-total-unready-count"], "help": {"short": "This must be an integer. The default is 3."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-add", "options": ["scale-down-delay-after-add"], "help": {"short": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-delete", "options": ["scale-down-delay-after-delete"], "help": {"short": "The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-failure", "options": ["scale-down-delay-after-failure"], "help": {"short": "The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-unneeded-time", "options": ["scale-down-unneeded-time"], "help": {"short": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-unready-time", "options": ["scale-down-unready-time"], "help": {"short": "The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-utilization-threshold", "options": ["scale-down-utilization-threshold"], "help": {"short": "The default is '0.5'."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scan-interval", "options": ["scan-interval"], "help": {"short": "The default is '10'. Values must be an integer number of seconds."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.skip-nodes-with-local-storage", "options": ["skip-nodes-with-local-storage"], "help": {"short": "The default is true."}}, {"type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.skip-nodes-with-system-pods", "options": ["skip-nodes-with-system-pods"], "help": {"short": "The default is true."}}]}, {"type": "object", "var": "$provisionedClusterInstance.properties.cloudProviderProfile", "options": ["cloud-provider-profile"], "group": "Properties", "help": {"short": "The profile for the underlying cloud infrastructure provider for the provisioned cluster."}, "args": [{"type": "object", "var": "$provisionedClusterInstance.properties.cloudProviderProfile.infraNetworkProfile", "options": ["infra-network-profile"], "help": {"short": "The profile for the infrastructure networks used by the provisioned cluster"}, "args": [{"type": "array<ResourceId>", "var": "$provisionedClusterInstance.properties.cloudProviderProfile.infraNetworkProfile.vnetSubnetIds", "options": ["vnet-subnet-ids"], "help": {"short": "List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}"}, "item": {"type": "ResourceId"}}]}]}, {"type": "object", "var": "$provisionedClusterInstance.properties.clusterVMAccessProfile", "options": ["cluster-vm-access-profile"], "group": "Properties", "help": {"short": "The SSH restricted access profile for the VMs in the provisioned cluster."}, "args": [{"type": "string", "var": "$provisionedClusterInstance.properties.clusterVMAccessProfile.authorizedIPRanges", "options": ["authorized-ip-ranges"], "help": {"short": "IP Address or CIDR for SSH access to VMs in the provisioned cluster"}}]}, {"type": "object", "var": "$provisionedClusterInstance.properties.controlPlane", "options": ["control-plane"], "group": "Properties", "help": {"short": "The profile for control plane of the provisioned cluster."}, "args": [{"type": "object", "var": "$provisionedClusterInstance.properties.controlPlane.controlPlaneEndpoint", "options": ["control-plane-endpoint"], "help": {"short": "IP Address of the Kubernetes API server"}, "args": [{"type": "string", "var": "$provisionedClusterInstance.properties.controlPlane.controlPlaneEndpoint.hostIP", "options": ["host-ip"], "help": {"short": "IP address of the Kubernetes API server"}}]}, {"type": "integer32", "var": "$provisionedClusterInstance.properties.controlPlane.count", "options": ["count"], "help": {"short": "Number of control plane nodes. The default value is 1, and the count should be an odd number"}, "default": {"value": 1}}, {"type": "string", "var": "$provisionedClusterInstance.properties.controlPlane.vmSize", "options": ["vm-size"], "help": {"short": "VM sku size of the control plane nodes"}}]}, {"type": "string", "var": "$provisionedClusterInstance.properties.kubernetesVersion", "options": ["kubernetes-version"], "group": "Properties", "help": {"short": "The version of Kubernetes in use by the provisioned cluster."}}, {"type": "object", "var": "$provisionedClusterInstance.properties.licenseProfile", "options": ["license-profile"], "group": "Properties", "help": {"short": "The license profile of the provisioned cluster."}, "args": [{"type": "string", "var": "$provisionedClusterInstance.properties.licenseProfile.azureHybridBenefit", "options": ["azure-hybrid-benefit"], "help": {"short": "Indicates whether Azure Hybrid Benefit is opted in. Default value is false"}, "default": {"value": "NotApplicable"}, "enum": {"items": [{"name": "False", "value": "False"}, {"name": "NotApplicable", "value": "NotApplicable"}, {"name": "True", "value": "True"}]}}]}, {"type": "object", "var": "$provisionedClusterInstance.properties.linuxProfile", "options": ["linux-profile"], "group": "Properties", "help": {"short": "The profile for Linux VMs in the provisioned cluster."}, "args": [{"type": "object", "var": "$provisionedClusterInstance.properties.linuxProfile.ssh", "options": ["ssh"], "help": {"short": "SSH configuration for VMs of the provisioned cluster."}, "args": [{"type": "array<object>", "var": "$provisionedClusterInstance.properties.linuxProfile.ssh.publicKeys", "options": ["public-keys"], "help": {"short": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."}, "item": {"type": "object", "args": [{"type": "string", "var": "$provisionedClusterInstance.properties.linuxProfile.ssh.publicKeys[].keyData", "options": ["key-data"], "help": {"short": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."}}]}}]}]}, {"type": "object", "var": "$provisionedClusterInstance.properties.networkProfile", "options": ["network-profile"], "group": "Properties", "help": {"short": "The network configuration profile for the provisioned cluster."}, "args": [{"type": "object", "var": "$provisionedClusterInstance.properties.networkProfile.loadBalancerProfile", "options": ["load-balancer-profile"], "help": {"short": "Profile of the HA Proxy load balancer."}, "args": [{"type": "integer32", "var": "$provisionedClusterInstance.properties.networkProfile.loadBalancerProfile.count", "options": ["count"], "help": {"short": "Number of HA Proxy load balancer VMs. The default value is 0."}, "default": {"value": 0}}]}, {"type": "string", "var": "$provisionedClusterInstance.properties.networkProfile.networkPolicy", "options": ["network-policy"], "help": {"short": "Network policy used for building Kubernetes network. Possible values include: 'calico'."}, "default": {"value": "calico"}, "enum": {"items": [{"name": "calico", "value": "calico"}]}}, {"type": "string", "var": "$provisionedClusterInstance.properties.networkProfile.podCidr", "options": ["pod-cidr"], "help": {"short": "A CIDR notation IP Address range from which to assign pod IPs."}}]}, {"type": "object", "var": "$provisionedClusterInstance.properties.storageProfile", "options": ["storage-profile"], "group": "Properties", "help": {"short": "The storage configuration profile for the provisioned cluster."}, "args": [{"type": "object", "var": "$provisionedClusterInstance.properties.storageProfile.nfsCsiDriver", "options": ["nfs-csi-driver"], "help": {"short": "NFS CSI Driver settings for the storage profile."}, "args": [{"type": "boolean", "var": "$provisionedClusterInstance.properties.storageProfile.nfsCsiDriver.enabled", "options": ["enabled"], "help": {"short": "Indicates whether to enable NFS CSI Driver. The default value is true."}, "default": {"value": true}}]}, {"type": "object", "var": "$provisionedClusterInstance.properties.storageProfile.smbCsiDriver", "options": ["smb-csi-driver"], "help": {"short": "SMB CSI Driver settings for the storage profile."}, "args": [{"type": "boolean", "var": "$provisionedClusterInstance.properties.storageProfile.smbCsiDriver.enabled", "options": ["enabled"], "help": {"short": "Indicates whether to enable SMB CSI Driver. The default value is true."}, "default": {"value": true}}]}]}]}, {"name": "ProvisionedClusterInstance", "args": [{"type": "object", "var": "$provisionedClusterInstance.extendedLocation", "options": ["extended-location"], "group": "ProvisionedClusterInstance", "help": {"short": "Extended location pointing to the underlying infrastructure"}, "args": [{"type": "string", "var": "$provisionedClusterInstance.extendedLocation.name", "options": ["name"], "help": {"short": "ARM Id of the extended location."}}, {"type": "string", "var": "$provisionedClusterInstance.extendedLocation.type", "options": ["type"], "help": {"short": "The extended location type. Allowed value: 'CustomLocation'"}, "enum": {"items": [{"name": "CustomLocation", "value": "CustomLocation"}]}}]}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "provisionedClusterInstances_CreateOrUpdate", "http": {"path": "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "connectedClusterResourceUri", "arg": "$Path.connectedClusterResourceUri", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "provisionedClusterInstance", "required": true, "props": [{"type": "object", "name": "extendedLocation", "arg": "$provisionedClusterInstance.extendedLocation", "props": [{"type": "string", "name": "name", "arg": "$provisionedClusterInstance.extendedLocation.name"}, {"type": "string", "name": "type", "arg": "$provisionedClusterInstance.extendedLocation.type", "enum": {"items": [{"value": "CustomLocation"}]}}]}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "agentPoolProfiles", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles", "item": {"type": "object", "props": [{"default": {"value": 1}, "type": "integer32", "name": "count", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].count"}, {"default": {"value": false}, "type": "boolean", "name": "enableAutoScaling", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].enableAutoScaling"}, {"type": "integer32", "name": "maxCount", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].maxCount"}, {"type": "integer32", "name": "maxPods", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].maxPods"}, {"type": "integer32", "name": "minCount", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].minCount"}, {"type": "string", "name": "name", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].name"}, {"type": "object", "name": "nodeLabels", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].nodeLabels", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "nodeTaints", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].nodeTaints", "item": {"type": "string"}}, {"type": "string", "name": "osSKU", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].osSKU", "enum": {"items": [{"value": "CBLMariner"}, {"value": "Windows2019"}, {"value": "Windows2022"}]}}, {"default": {"value": "Linux"}, "type": "string", "name": "osType", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "string", "name": "vmSize", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].vmSize"}]}}, {"type": "object", "name": "autoScalerProfile", "arg": "$provisionedClusterInstance.properties.autoScalerProfile", "props": [{"type": "string", "name": "balance-similar-node-groups", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.balance-similar-node-groups"}, {"type": "string", "name": "expander", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.expander", "enum": {"items": [{"value": "least-waste"}, {"value": "most-pods"}, {"value": "priority"}, {"value": "random"}]}}, {"type": "string", "name": "max-empty-bulk-delete", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.max-empty-bulk-delete"}, {"type": "string", "name": "max-graceful-termination-sec", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.max-graceful-termination-sec"}, {"type": "string", "name": "max-node-provision-time", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.max-node-provision-time"}, {"type": "string", "name": "max-total-unready-percentage", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.max-total-unready-percentage"}, {"type": "string", "name": "new-pod-scale-up-delay", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.new-pod-scale-up-delay"}, {"type": "string", "name": "ok-total-unready-count", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.ok-total-unready-count"}, {"type": "string", "name": "scale-down-delay-after-add", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-add"}, {"type": "string", "name": "scale-down-delay-after-delete", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-delete"}, {"type": "string", "name": "scale-down-delay-after-failure", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-failure"}, {"type": "string", "name": "scale-down-unneeded-time", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-unneeded-time"}, {"type": "string", "name": "scale-down-unready-time", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-unready-time"}, {"type": "string", "name": "scale-down-utilization-threshold", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-utilization-threshold"}, {"type": "string", "name": "scan-interval", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scan-interval"}, {"type": "string", "name": "skip-nodes-with-local-storage", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.skip-nodes-with-local-storage"}, {"type": "string", "name": "skip-nodes-with-system-pods", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.skip-nodes-with-system-pods"}]}, {"type": "object", "name": "cloudProviderProfile", "arg": "$provisionedClusterInstance.properties.cloudProviderProfile", "props": [{"type": "object", "name": "infraNetworkProfile", "arg": "$provisionedClusterInstance.properties.cloudProviderProfile.infraNetworkProfile", "props": [{"type": "array<ResourceId>", "name": "vnetSubnetIds", "arg": "$provisionedClusterInstance.properties.cloudProviderProfile.infraNetworkProfile.vnetSubnetIds", "item": {"type": "ResourceId"}}]}]}, {"type": "object", "name": "clusterVMAccessProfile", "arg": "$provisionedClusterInstance.properties.clusterVMAccessProfile", "props": [{"type": "string", "name": "authorizedIPRanges", "arg": "$provisionedClusterInstance.properties.clusterVMAccessProfile.authorizedIPRanges"}]}, {"type": "object", "name": "controlPlane", "arg": "$provisionedClusterInstance.properties.controlPlane", "props": [{"type": "object", "name": "controlPlaneEndpoint", "arg": "$provisionedClusterInstance.properties.controlPlane.controlPlaneEndpoint", "props": [{"type": "string", "name": "hostIP", "arg": "$provisionedClusterInstance.properties.controlPlane.controlPlaneEndpoint.hostIP"}]}, {"default": {"value": 1}, "type": "integer32", "name": "count", "arg": "$provisionedClusterInstance.properties.controlPlane.count"}, {"type": "string", "name": "vmSize", "arg": "$provisionedClusterInstance.properties.controlPlane.vmSize"}]}, {"type": "string", "name": "kubernetesVersion", "arg": "$provisionedClusterInstance.properties.kubernetesVersion"}, {"type": "object", "name": "licenseProfile", "arg": "$provisionedClusterInstance.properties.licenseProfile", "props": [{"default": {"value": "NotApplicable"}, "type": "string", "name": "azureHybridBenefit", "arg": "$provisionedClusterInstance.properties.licenseProfile.azureHybridBenefit", "enum": {"items": [{"value": "False"}, {"value": "NotApplicable"}, {"value": "True"}]}}]}, {"type": "object", "name": "linuxProfile", "arg": "$provisionedClusterInstance.properties.linuxProfile", "props": [{"type": "object", "name": "ssh", "arg": "$provisionedClusterInstance.properties.linuxProfile.ssh", "props": [{"type": "array<object>", "name": "publicKeys", "arg": "$provisionedClusterInstance.properties.linuxProfile.ssh.publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData", "arg": "$provisionedClusterInstance.properties.linuxProfile.ssh.publicKeys[].keyData"}]}}]}]}, {"type": "object", "name": "networkProfile", "arg": "$provisionedClusterInstance.properties.networkProfile", "props": [{"type": "object", "name": "loadBalancerProfile", "arg": "$provisionedClusterInstance.properties.networkProfile.loadBalancerProfile", "props": [{"default": {"value": 0}, "type": "integer32", "name": "count", "arg": "$provisionedClusterInstance.properties.networkProfile.loadBalancerProfile.count"}]}, {"default": {"value": "calico"}, "type": "string", "name": "networkPolicy", "arg": "$provisionedClusterInstance.properties.networkProfile.networkPolicy", "enum": {"items": [{"value": "calico"}]}}, {"type": "string", "name": "podCidr", "arg": "$provisionedClusterInstance.properties.networkProfile.podCidr"}]}, {"type": "object", "name": "storageProfile", "arg": "$provisionedClusterInstance.properties.storageProfile", "props": [{"type": "object", "name": "nfsCsiDriver", "arg": "$provisionedClusterInstance.properties.storageProfile.nfsCsiDriver", "props": [{"default": {"value": true}, "type": "boolean", "name": "enabled", "arg": "$provisionedClusterInstance.properties.storageProfile.nfsCsiDriver.enabled"}]}, {"type": "object", "name": "smbCsiDriver", "arg": "$provisionedClusterInstance.properties.storageProfile.smbCsiDriver", "props": [{"default": {"value": true}, "type": "boolean", "name": "enabled", "arg": "$provisionedClusterInstance.properties.storageProfile.smbCsiDriver.enabled"}]}]}]}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "object", "name": "extendedLocation", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "CustomLocation"}]}}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "agentPoolProfiles", "item": {"type": "object", "props": [{"default": {"value": 1}, "type": "integer32", "name": "count"}, {"default": {"value": false}, "type": "boolean", "name": "enableAutoScaling"}, {"readOnly": true, "type": "string", "name": "kubernetesVersion"}, {"type": "integer32", "name": "maxCount"}, {"type": "integer32", "name": "maxPods"}, {"type": "integer32", "name": "minCount"}, {"type": "string", "name": "name"}, {"type": "object", "name": "nodeLabels", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "nodeTaints", "item": {"type": "string"}}, {"type": "string", "name": "osSKU", "enum": {"items": [{"value": "CBLMariner"}, {"value": "Windows2019"}, {"value": "Windows2022"}]}}, {"default": {"value": "Linux"}, "type": "string", "name": "osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "string", "name": "vmSize"}]}}, {"type": "object", "name": "autoScalerProfile", "props": [{"type": "string", "name": "balance-similar-node-groups"}, {"type": "string", "name": "expander", "enum": {"items": [{"value": "least-waste"}, {"value": "most-pods"}, {"value": "priority"}, {"value": "random"}]}}, {"type": "string", "name": "max-empty-bulk-delete"}, {"type": "string", "name": "max-graceful-termination-sec"}, {"type": "string", "name": "max-node-provision-time"}, {"type": "string", "name": "max-total-unready-percentage"}, {"type": "string", "name": "new-pod-scale-up-delay"}, {"type": "string", "name": "ok-total-unready-count"}, {"type": "string", "name": "scale-down-delay-after-add"}, {"type": "string", "name": "scale-down-delay-after-delete"}, {"type": "string", "name": "scale-down-delay-after-failure"}, {"type": "string", "name": "scale-down-unneeded-time"}, {"type": "string", "name": "scale-down-unready-time"}, {"type": "string", "name": "scale-down-utilization-threshold"}, {"type": "string", "name": "scan-interval"}, {"type": "string", "name": "skip-nodes-with-local-storage"}, {"type": "string", "name": "skip-nodes-with-system-pods"}]}, {"type": "object", "name": "cloudProviderProfile", "props": [{"type": "object", "name": "infraNetworkProfile", "props": [{"type": "array<ResourceId>", "name": "vnetSubnetIds", "item": {"type": "ResourceId"}}]}]}, {"type": "object", "name": "clusterVMAccessProfile", "props": [{"type": "string", "name": "authorizedIPRanges"}]}, {"type": "object", "name": "controlPlane", "props": [{"type": "object", "name": "controlPlaneEndpoint", "props": [{"type": "string", "name": "hostIP"}]}, {"default": {"value": 1}, "type": "integer32", "name": "count"}, {"type": "string", "name": "vmSize"}]}, {"type": "string", "name": "kubernetesVersion"}, {"type": "object", "name": "licenseProfile", "props": [{"default": {"value": "NotApplicable"}, "type": "string", "name": "azureHybridBenefit", "enum": {"items": [{"value": "False"}, {"value": "NotApplicable"}, {"value": "True"}]}}]}, {"type": "object", "name": "linuxProfile", "props": [{"type": "object", "name": "ssh", "props": [{"type": "array<object>", "name": "publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData"}]}}]}]}, {"type": "object", "name": "networkProfile", "props": [{"type": "object", "name": "loadBalancerProfile", "props": [{"default": {"value": 0}, "type": "integer32", "name": "count"}]}, {"default": {"value": "calico"}, "type": "string", "name": "networkPolicy", "enum": {"items": [{"value": "calico"}]}}, {"type": "string", "name": "podCidr"}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Pending"}, {"value": "Succeeded"}, {"value": "Updating"}, {"value": "Upgrading"}]}}, {"readOnly": true, "type": "object", "name": "status", "props": [{"type": "array<object>", "name": "controlPlaneStatus", "item": {"readOnly": true, "type": "object", "props": [{"type": "string", "name": "errorMessage"}, {"type": "string", "name": "name"}, {"type": "string", "name": "phase", "enum": {"items": [{"value": "deleting"}, {"value": "failed"}, {"value": "pending"}, {"value": "provisioned"}, {"value": "provisioning"}, {"value": "provisioning {HelmChartInstalled}"}, {"value": "provisioning {MSICertificateDownloaded}"}, {"value": "upgrading"}]}}, {"type": "boolean", "name": "ready"}]}}, {"readOnly": true, "type": "string", "name": "currentState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Pending"}, {"value": "Succeeded"}, {"value": "Updating"}, {"value": "Upgrading"}]}}, {"type": "string", "name": "errorMessage"}]}, {"type": "object", "name": "storageProfile", "props": [{"type": "object", "name": "nfsCsiDriver", "props": [{"default": {"value": true}, "type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "smbCsiDriver", "props": [{"default": {"value": true}, "type": "boolean", "name": "enabled"}]}]}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2024-01-01", "resources": [{"id": "/{connectedclusterresourceuri}/providers/microsoft.hybridcontainerservice/provisionedclusterinstances/default", "version": "2024-01-01", "swagger": "mgmt-plane/hybridaks/ResourceProviders/Microsoft.HybridContainerService/Paths/L3tjb25uZWN0ZWRDbHVzdGVyUmVzb3VyY2VVcml9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29udGFpbmVyU2VydmljZS9wcm92aXNpb25lZENsdXN0ZXJJbnN0YW5jZXMvZGVmYXVsdA==/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.connectedClusterResourceUri", "options": ["connected-cluster-resource-uri"], "required": true, "help": {"short": "The fully qualified Azure Resource Manager identifier of the connected cluster resource."}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "array<object>", "var": "$provisionedClusterInstance.properties.agentPoolProfiles", "options": ["agent-pool-profiles"], "group": "Properties", "help": {"short": "The agent pool properties for the provisioned cluster."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "integer32", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].count", "options": ["count"], "help": {"short": "Number of nodes in the agent pool. The default value is 1."}}, {"nullable": true, "type": "boolean", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].enableAutoScaling", "options": ["enable-auto-scaling"], "help": {"short": "Whether to enable auto-scaler. Default value is false"}}, {"nullable": true, "type": "integer32", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].maxCount", "options": ["max-count"], "help": {"short": "The maximum number of nodes for auto-scaling"}}, {"nullable": true, "type": "integer32", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].maxPods", "options": ["max-pods"], "help": {"short": "The maximum number of pods that can run on a node."}}, {"nullable": true, "type": "integer32", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].minCount", "options": ["min-count"], "help": {"short": "The minimum number of nodes for auto-scaling"}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].name", "options": ["name"], "help": {"short": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"}}, {"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].nodeLabels", "options": ["node-labels"], "help": {"short": "The node labels to be persisted across all nodes in agent pool."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}, {"nullable": true, "type": "array<string>", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].nodeTaints", "options": ["node-taints"], "help": {"short": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].osSKU", "options": ["os-sku"], "help": {"short": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."}, "enum": {"items": [{"name": "CBLMariner", "value": "CBLMariner"}, {"name": "Windows2019", "value": "Windows2019"}, {"name": "Windows2022", "value": "Windows2022"}]}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].osType", "options": ["os-type"], "help": {"short": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'"}, "enum": {"items": [{"name": "Linux", "value": "Linux"}, {"name": "Windows", "value": "Windows"}]}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.agentPoolProfiles[].vmSize", "options": ["vm-size"], "help": {"short": "The VM sku size of the agent pool node VMs."}}]}}, {"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.autoScalerProfile", "options": ["auto-scaler-profile"], "group": "Properties", "help": {"short": "Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster."}, "args": [{"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.balance-similar-node-groups", "options": ["balance-similar-node-groups"], "help": {"short": "Valid values are 'true' and 'false'"}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.expander", "options": ["expander"], "help": {"short": "If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."}, "enum": {"items": [{"name": "least-waste", "value": "least-waste"}, {"name": "most-pods", "value": "most-pods"}, {"name": "priority", "value": "priority"}, {"name": "random", "value": "random"}]}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.max-empty-bulk-delete", "options": ["max-empty-bulk-delete"], "help": {"short": "The default is 10."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.max-graceful-termination-sec", "options": ["max-graceful-termination-sec"], "help": {"short": "The default is 600."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.max-node-provision-time", "options": ["max-node-provision-time"], "help": {"short": "The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.max-total-unready-percentage", "options": ["max-total-unready-percentage"], "help": {"short": "The default is 45. The maximum is 100 and the minimum is 0."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.new-pod-scale-up-delay", "options": ["new-pod-scale-up-delay"], "help": {"short": "For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.ok-total-unready-count", "options": ["ok-total-unready-count"], "help": {"short": "This must be an integer. The default is 3."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-add", "options": ["scale-down-delay-after-add"], "help": {"short": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-delete", "options": ["scale-down-delay-after-delete"], "help": {"short": "The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-failure", "options": ["scale-down-delay-after-failure"], "help": {"short": "The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-unneeded-time", "options": ["scale-down-unneeded-time"], "help": {"short": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-unready-time", "options": ["scale-down-unready-time"], "help": {"short": "The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-utilization-threshold", "options": ["scale-down-utilization-threshold"], "help": {"short": "The default is '0.5'."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.scan-interval", "options": ["scan-interval"], "help": {"short": "The default is '10'. Values must be an integer number of seconds."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.skip-nodes-with-local-storage", "options": ["skip-nodes-with-local-storage"], "help": {"short": "The default is true."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.autoScalerProfile.skip-nodes-with-system-pods", "options": ["skip-nodes-with-system-pods"], "help": {"short": "The default is true."}}]}, {"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.cloudProviderProfile", "options": ["cloud-provider-profile"], "group": "Properties", "help": {"short": "The profile for the underlying cloud infrastructure provider for the provisioned cluster."}, "args": [{"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.cloudProviderProfile.infraNetworkProfile", "options": ["infra-network-profile"], "help": {"short": "The profile for the infrastructure networks used by the provisioned cluster"}, "args": [{"nullable": true, "type": "array<ResourceId>", "var": "$provisionedClusterInstance.properties.cloudProviderProfile.infraNetworkProfile.vnetSubnetIds", "options": ["vnet-subnet-ids"], "help": {"short": "List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}"}, "item": {"nullable": true, "type": "ResourceId"}}]}]}, {"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.clusterVMAccessProfile", "options": ["cluster-vm-access-profile"], "group": "Properties", "help": {"short": "The SSH restricted access profile for the VMs in the provisioned cluster."}, "args": [{"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.clusterVMAccessProfile.authorizedIPRanges", "options": ["authorized-ip-ranges"], "help": {"short": "IP Address or CIDR for SSH access to VMs in the provisioned cluster"}}]}, {"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.controlPlane", "options": ["control-plane"], "group": "Properties", "help": {"short": "The profile for control plane of the provisioned cluster."}, "args": [{"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.controlPlane.controlPlaneEndpoint", "options": ["control-plane-endpoint"], "help": {"short": "IP Address of the Kubernetes API server"}, "args": [{"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.controlPlane.controlPlaneEndpoint.hostIP", "options": ["host-ip"], "help": {"short": "IP address of the Kubernetes API server"}}]}, {"nullable": true, "type": "integer32", "var": "$provisionedClusterInstance.properties.controlPlane.count", "options": ["count"], "help": {"short": "Number of control plane nodes. The default value is 1, and the count should be an odd number"}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.controlPlane.vmSize", "options": ["vm-size"], "help": {"short": "VM sku size of the control plane nodes"}}]}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.kubernetesVersion", "options": ["kubernetes-version"], "group": "Properties", "help": {"short": "The version of Kubernetes in use by the provisioned cluster."}}, {"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.licenseProfile", "options": ["license-profile"], "group": "Properties", "help": {"short": "The license profile of the provisioned cluster."}, "args": [{"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.licenseProfile.azureHybridBenefit", "options": ["azure-hybrid-benefit"], "help": {"short": "Indicates whether Azure Hybrid Benefit is opted in. Default value is false"}, "enum": {"items": [{"name": "False", "value": "False"}, {"name": "NotApplicable", "value": "NotApplicable"}, {"name": "True", "value": "True"}]}}]}, {"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.linuxProfile", "options": ["linux-profile"], "group": "Properties", "help": {"short": "The profile for Linux VMs in the provisioned cluster."}, "args": [{"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.linuxProfile.ssh", "options": ["ssh"], "help": {"short": "SSH configuration for VMs of the provisioned cluster."}, "args": [{"nullable": true, "type": "array<object>", "var": "$provisionedClusterInstance.properties.linuxProfile.ssh.publicKeys", "options": ["public-keys"], "help": {"short": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.linuxProfile.ssh.publicKeys[].keyData", "options": ["key-data"], "help": {"short": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."}}]}}]}]}, {"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.networkProfile", "options": ["network-profile"], "group": "Properties", "help": {"short": "The network configuration profile for the provisioned cluster."}, "args": [{"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.networkProfile.loadBalancerProfile", "options": ["load-balancer-profile"], "help": {"short": "Profile of the HA Proxy load balancer."}, "args": [{"nullable": true, "type": "integer32", "var": "$provisionedClusterInstance.properties.networkProfile.loadBalancerProfile.count", "options": ["count"], "help": {"short": "Number of HA Proxy load balancer VMs. The default value is 0."}}]}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.networkProfile.networkPolicy", "options": ["network-policy"], "help": {"short": "Network policy used for building Kubernetes network. Possible values include: 'calico'."}, "enum": {"items": [{"name": "calico", "value": "calico"}]}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.properties.networkProfile.podCidr", "options": ["pod-cidr"], "help": {"short": "A CIDR notation IP Address range from which to assign pod IPs."}}]}, {"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.storageProfile", "options": ["storage-profile"], "group": "Properties", "help": {"short": "The storage configuration profile for the provisioned cluster."}, "args": [{"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.storageProfile.nfsCsiDriver", "options": ["nfs-csi-driver"], "help": {"short": "NFS CSI Driver settings for the storage profile."}, "args": [{"nullable": true, "type": "boolean", "var": "$provisionedClusterInstance.properties.storageProfile.nfsCsiDriver.enabled", "options": ["enabled"], "help": {"short": "Indicates whether to enable NFS CSI Driver. The default value is true."}}]}, {"nullable": true, "type": "object", "var": "$provisionedClusterInstance.properties.storageProfile.smbCsiDriver", "options": ["smb-csi-driver"], "help": {"short": "SMB CSI Driver settings for the storage profile."}, "args": [{"nullable": true, "type": "boolean", "var": "$provisionedClusterInstance.properties.storageProfile.smbCsiDriver.enabled", "options": ["enabled"], "help": {"short": "Indicates whether to enable SMB CSI Driver. The default value is true."}}]}]}]}, {"name": "ProvisionedClusterInstance", "args": [{"nullable": true, "type": "object", "var": "$provisionedClusterInstance.extendedLocation", "options": ["extended-location"], "group": "ProvisionedClusterInstance", "help": {"short": "Extended location pointing to the underlying infrastructure"}, "args": [{"nullable": true, "type": "string", "var": "$provisionedClusterInstance.extendedLocation.name", "options": ["name"], "help": {"short": "ARM Id of the extended location."}}, {"nullable": true, "type": "string", "var": "$provisionedClusterInstance.extendedLocation.type", "options": ["type"], "help": {"short": "The extended location type. Allowed value: 'CustomLocation'"}, "enum": {"items": [{"name": "CustomLocation", "value": "CustomLocation"}]}}]}]}], "operations": [{"operationId": "provisionedClusterInstances_Get", "http": {"path": "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "connectedClusterResourceUri", "arg": "$Path.connectedClusterResourceUri", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "object", "name": "extendedLocation", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "CustomLocation"}]}}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "agentPoolProfiles", "item": {"type": "object", "props": [{"default": {"value": 1}, "type": "integer32", "name": "count"}, {"default": {"value": false}, "type": "boolean", "name": "enableAutoScaling"}, {"readOnly": true, "type": "string", "name": "kubernetesVersion"}, {"type": "integer32", "name": "maxCount"}, {"type": "integer32", "name": "maxPods"}, {"type": "integer32", "name": "minCount"}, {"type": "string", "name": "name"}, {"type": "object", "name": "nodeLabels", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "nodeTaints", "item": {"type": "string"}}, {"type": "string", "name": "osSKU", "enum": {"items": [{"value": "CBLMariner"}, {"value": "Windows2019"}, {"value": "Windows2022"}]}}, {"default": {"value": "Linux"}, "type": "string", "name": "osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "string", "name": "vmSize"}]}}, {"type": "object", "name": "autoScalerProfile", "props": [{"type": "string", "name": "balance-similar-node-groups"}, {"type": "string", "name": "expander", "enum": {"items": [{"value": "least-waste"}, {"value": "most-pods"}, {"value": "priority"}, {"value": "random"}]}}, {"type": "string", "name": "max-empty-bulk-delete"}, {"type": "string", "name": "max-graceful-termination-sec"}, {"type": "string", "name": "max-node-provision-time"}, {"type": "string", "name": "max-total-unready-percentage"}, {"type": "string", "name": "new-pod-scale-up-delay"}, {"type": "string", "name": "ok-total-unready-count"}, {"type": "string", "name": "scale-down-delay-after-add"}, {"type": "string", "name": "scale-down-delay-after-delete"}, {"type": "string", "name": "scale-down-delay-after-failure"}, {"type": "string", "name": "scale-down-unneeded-time"}, {"type": "string", "name": "scale-down-unready-time"}, {"type": "string", "name": "scale-down-utilization-threshold"}, {"type": "string", "name": "scan-interval"}, {"type": "string", "name": "skip-nodes-with-local-storage"}, {"type": "string", "name": "skip-nodes-with-system-pods"}]}, {"type": "object", "name": "cloudProviderProfile", "props": [{"type": "object", "name": "infraNetworkProfile", "props": [{"type": "array<ResourceId>", "name": "vnetSubnetIds", "item": {"type": "ResourceId"}}]}]}, {"type": "object", "name": "clusterVMAccessProfile", "props": [{"type": "string", "name": "authorizedIPRanges"}]}, {"type": "object", "name": "controlPlane", "props": [{"type": "object", "name": "controlPlaneEndpoint", "props": [{"type": "string", "name": "hostIP"}]}, {"default": {"value": 1}, "type": "integer32", "name": "count"}, {"type": "string", "name": "vmSize"}]}, {"type": "string", "name": "kubernetesVersion"}, {"type": "object", "name": "licenseProfile", "props": [{"default": {"value": "NotApplicable"}, "type": "string", "name": "azureHybridBenefit", "enum": {"items": [{"value": "False"}, {"value": "NotApplicable"}, {"value": "True"}]}}]}, {"type": "object", "name": "linuxProfile", "props": [{"type": "object", "name": "ssh", "props": [{"type": "array<object>", "name": "publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData"}]}}]}]}, {"type": "object", "name": "networkProfile", "props": [{"type": "object", "name": "loadBalancerProfile", "props": [{"default": {"value": 0}, "type": "integer32", "name": "count"}]}, {"default": {"value": "calico"}, "type": "string", "name": "networkPolicy", "enum": {"items": [{"value": "calico"}]}}, {"type": "string", "name": "podCidr"}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Pending"}, {"value": "Succeeded"}, {"value": "Updating"}, {"value": "Upgrading"}]}}, {"readOnly": true, "type": "object", "name": "status", "props": [{"type": "array<object>", "name": "controlPlaneStatus", "item": {"readOnly": true, "type": "object", "props": [{"type": "string", "name": "errorMessage"}, {"type": "string", "name": "name"}, {"type": "string", "name": "phase", "enum": {"items": [{"value": "deleting"}, {"value": "failed"}, {"value": "pending"}, {"value": "provisioned"}, {"value": "provisioning"}, {"value": "provisioning {HelmChartInstalled}"}, {"value": "provisioning {MSICertificateDownloaded}"}, {"value": "upgrading"}]}}, {"type": "boolean", "name": "ready"}]}}, {"readOnly": true, "type": "string", "name": "currentState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Pending"}, {"value": "Succeeded"}, {"value": "Updating"}, {"value": "Upgrading"}]}}, {"type": "string", "name": "errorMessage"}]}, {"type": "object", "name": "storageProfile", "props": [{"type": "object", "name": "nfsCsiDriver", "props": [{"default": {"value": true}, "type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "smbCsiDriver", "props": [{"default": {"value": true}, "type": "boolean", "name": "enabled"}]}]}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "ProvisionedCluster_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "provisionedClusterInstance", "required": true, "props": [{"type": "object", "name": "extendedLocation", "arg": "$provisionedClusterInstance.extendedLocation", "props": [{"type": "string", "name": "name", "arg": "$provisionedClusterInstance.extendedLocation.name"}, {"type": "string", "name": "type", "arg": "$provisionedClusterInstance.extendedLocation.type", "enum": {"items": [{"value": "CustomLocation"}]}}]}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "agentPoolProfiles", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles", "item": {"type": "object", "props": [{"default": {"value": 1}, "type": "integer32", "name": "count", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].count"}, {"default": {"value": false}, "type": "boolean", "name": "enableAutoScaling", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].enableAutoScaling"}, {"type": "integer32", "name": "maxCount", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].maxCount"}, {"type": "integer32", "name": "maxPods", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].maxPods"}, {"type": "integer32", "name": "minCount", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].minCount"}, {"type": "string", "name": "name", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].name"}, {"type": "object", "name": "nodeLabels", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].nodeLabels", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "nodeTaints", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].nodeTaints", "item": {"type": "string"}}, {"type": "string", "name": "osSKU", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].osSKU", "enum": {"items": [{"value": "CBLMariner"}, {"value": "Windows2019"}, {"value": "Windows2022"}]}}, {"default": {"value": "Linux"}, "type": "string", "name": "osType", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "string", "name": "vmSize", "arg": "$provisionedClusterInstance.properties.agentPoolProfiles[].vmSize"}]}}, {"type": "object", "name": "autoScalerProfile", "arg": "$provisionedClusterInstance.properties.autoScalerProfile", "props": [{"type": "string", "name": "balance-similar-node-groups", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.balance-similar-node-groups"}, {"type": "string", "name": "expander", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.expander", "enum": {"items": [{"value": "least-waste"}, {"value": "most-pods"}, {"value": "priority"}, {"value": "random"}]}}, {"type": "string", "name": "max-empty-bulk-delete", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.max-empty-bulk-delete"}, {"type": "string", "name": "max-graceful-termination-sec", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.max-graceful-termination-sec"}, {"type": "string", "name": "max-node-provision-time", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.max-node-provision-time"}, {"type": "string", "name": "max-total-unready-percentage", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.max-total-unready-percentage"}, {"type": "string", "name": "new-pod-scale-up-delay", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.new-pod-scale-up-delay"}, {"type": "string", "name": "ok-total-unready-count", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.ok-total-unready-count"}, {"type": "string", "name": "scale-down-delay-after-add", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-add"}, {"type": "string", "name": "scale-down-delay-after-delete", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-delete"}, {"type": "string", "name": "scale-down-delay-after-failure", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-delay-after-failure"}, {"type": "string", "name": "scale-down-unneeded-time", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-unneeded-time"}, {"type": "string", "name": "scale-down-unready-time", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-unready-time"}, {"type": "string", "name": "scale-down-utilization-threshold", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scale-down-utilization-threshold"}, {"type": "string", "name": "scan-interval", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.scan-interval"}, {"type": "string", "name": "skip-nodes-with-local-storage", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.skip-nodes-with-local-storage"}, {"type": "string", "name": "skip-nodes-with-system-pods", "arg": "$provisionedClusterInstance.properties.autoScalerProfile.skip-nodes-with-system-pods"}]}, {"type": "object", "name": "cloudProviderProfile", "arg": "$provisionedClusterInstance.properties.cloudProviderProfile", "props": [{"type": "object", "name": "infraNetworkProfile", "arg": "$provisionedClusterInstance.properties.cloudProviderProfile.infraNetworkProfile", "props": [{"type": "array<ResourceId>", "name": "vnetSubnetIds", "arg": "$provisionedClusterInstance.properties.cloudProviderProfile.infraNetworkProfile.vnetSubnetIds", "item": {"type": "ResourceId"}}]}]}, {"type": "object", "name": "clusterVMAccessProfile", "arg": "$provisionedClusterInstance.properties.clusterVMAccessProfile", "props": [{"type": "string", "name": "authorizedIPRanges", "arg": "$provisionedClusterInstance.properties.clusterVMAccessProfile.authorizedIPRanges"}]}, {"type": "object", "name": "controlPlane", "arg": "$provisionedClusterInstance.properties.controlPlane", "props": [{"type": "object", "name": "controlPlaneEndpoint", "arg": "$provisionedClusterInstance.properties.controlPlane.controlPlaneEndpoint", "props": [{"type": "string", "name": "hostIP", "arg": "$provisionedClusterInstance.properties.controlPlane.controlPlaneEndpoint.hostIP"}]}, {"default": {"value": 1}, "type": "integer32", "name": "count", "arg": "$provisionedClusterInstance.properties.controlPlane.count"}, {"type": "string", "name": "vmSize", "arg": "$provisionedClusterInstance.properties.controlPlane.vmSize"}]}, {"type": "string", "name": "kubernetesVersion", "arg": "$provisionedClusterInstance.properties.kubernetesVersion"}, {"type": "object", "name": "licenseProfile", "arg": "$provisionedClusterInstance.properties.licenseProfile", "props": [{"default": {"value": "NotApplicable"}, "type": "string", "name": "azureHybridBenefit", "arg": "$provisionedClusterInstance.properties.licenseProfile.azureHybridBenefit", "enum": {"items": [{"value": "False"}, {"value": "NotApplicable"}, {"value": "True"}]}}]}, {"type": "object", "name": "linuxProfile", "arg": "$provisionedClusterInstance.properties.linuxProfile", "props": [{"type": "object", "name": "ssh", "arg": "$provisionedClusterInstance.properties.linuxProfile.ssh", "props": [{"type": "array<object>", "name": "publicKeys", "arg": "$provisionedClusterInstance.properties.linuxProfile.ssh.publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData", "arg": "$provisionedClusterInstance.properties.linuxProfile.ssh.publicKeys[].keyData"}]}}]}]}, {"type": "object", "name": "networkProfile", "arg": "$provisionedClusterInstance.properties.networkProfile", "props": [{"type": "object", "name": "loadBalancerProfile", "arg": "$provisionedClusterInstance.properties.networkProfile.loadBalancerProfile", "props": [{"default": {"value": 0}, "type": "integer32", "name": "count", "arg": "$provisionedClusterInstance.properties.networkProfile.loadBalancerProfile.count"}]}, {"default": {"value": "calico"}, "type": "string", "name": "networkPolicy", "arg": "$provisionedClusterInstance.properties.networkProfile.networkPolicy", "enum": {"items": [{"value": "calico"}]}}, {"type": "string", "name": "podCidr", "arg": "$provisionedClusterInstance.properties.networkProfile.podCidr"}]}, {"type": "object", "name": "storageProfile", "arg": "$provisionedClusterInstance.properties.storageProfile", "props": [{"type": "object", "name": "nfsCsiDriver", "arg": "$provisionedClusterInstance.properties.storageProfile.nfsCsiDriver", "props": [{"default": {"value": true}, "type": "boolean", "name": "enabled", "arg": "$provisionedClusterInstance.properties.storageProfile.nfsCsiDriver.enabled"}]}, {"type": "object", "name": "smbCsiDriver", "arg": "$provisionedClusterInstance.properties.storageProfile.smbCsiDriver", "props": [{"default": {"value": true}, "type": "boolean", "name": "enabled", "arg": "$provisionedClusterInstance.properties.storageProfile.smbCsiDriver.enabled"}]}]}]}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "provisionedClusterInstances_CreateOrUpdate", "http": {"path": "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "connectedClusterResourceUri", "arg": "$Path.connectedClusterResourceUri", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@ProvisionedCluster_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}