<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.scvmm/virtualmachinetemplates" version="2024-06-01" swagger="mgmt-plane/scvmm/ResourceProviders/Microsoft.ScVmm/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlNjVm1tL3ZpcnR1YWxNYWNoaW5lVGVtcGxhdGVz/V/MjAyNC0wNi0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.scvmm/virtualmachinetemplates" version="2024-06-01" swagger="mgmt-plane/scvmm/ResourceProviders/Microsoft.ScVmm/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2NWbW0vdmlydHVhbE1hY2hpbmVUZW1wbGF0ZXM=/V/MjAyNC0wNi0wMQ=="/>
  <commandGroup name="sc-vmm virtual-machine-template">
    <command name="list" version="2024-06-01">
      <resource id="/subscriptions/{}/providers/microsoft.scvmm/virtualmachinetemplates" version="2024-06-01" swagger="mgmt-plane/scvmm/ResourceProviders/Microsoft.ScVmm/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlNjVm1tL3ZpcnR1YWxNYWNoaW5lVGVtcGxhdGVz/V/MjAyNC0wNi0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.scvmm/virtualmachinetemplates" version="2024-06-01" swagger="mgmt-plane/scvmm/ResourceProviders/Microsoft.ScVmm/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2NWbW0vdmlydHVhbE1hY2hpbmVUZW1wbGF0ZXM=/V/MjAyNC0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_VirtualMachineTemplates_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <condition var="$Condition_VirtualMachineTemplates_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_VirtualMachineTemplates_ListBySubscription" operationId="VirtualMachineTemplates_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/virtualMachineTemplates">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop type="object" name="extendedLocation" required="True">
                        <prop type="ResourceId" name="name"/>
                        <prop type="string" name="type"/>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ScVmm/virtualMachineTemplates/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="string" name="computerName"/>
                        <prop readOnly="True" type="integer32" name="cpuCount"/>
                        <prop readOnly="True" type="array<object>" name="disks" identifiers="diskId name">
                          <item type="object">
                            <prop type="integer32" name="bus"/>
                            <prop type="string" name="busType"/>
                            <prop type="string" name="createDiffDisk">
                              <enum>
                                <item value="&quot;false&quot;"/>
                                <item value="&quot;true&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="diskId"/>
                            <prop type="integer32" name="diskSizeGB"/>
                            <prop readOnly="True" type="string" name="displayName"/>
                            <prop type="integer32" name="lun"/>
                            <prop readOnly="True" type="integer32" name="maxDiskSizeGB"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="storageQoSPolicy">
                              <prop type="string" name="id"/>
                              <prop type="string" name="name"/>
                            </prop>
                            <prop type="string" name="templateDiskId"/>
                            <prop readOnly="True" type="string" name="vhdFormatType"/>
                            <prop type="string" name="vhdType"/>
                            <prop readOnly="True" type="string" name="volumeType"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="dynamicMemoryEnabled">
                          <enum>
                            <item value="&quot;false&quot;"/>
                            <item value="&quot;true&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer32" name="dynamicMemoryMaxMB"/>
                        <prop readOnly="True" type="integer32" name="dynamicMemoryMinMB"/>
                        <prop readOnly="True" type="integer32" name="generation"/>
                        <prop type="string" name="inventoryItemId"/>
                        <prop readOnly="True" type="string" name="isCustomizable">
                          <enum>
                            <item value="&quot;false&quot;"/>
                            <item value="&quot;true&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="isHighlyAvailable">
                          <enum>
                            <item value="&quot;false&quot;"/>
                            <item value="&quot;true&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="limitCpuForMigration">
                          <enum>
                            <item value="&quot;false&quot;"/>
                            <item value="&quot;true&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer32" name="memoryMB"/>
                        <prop readOnly="True" type="array<object>" name="networkInterfaces" identifiers="nicId name">
                          <item type="object">
                            <prop readOnly="True" type="string" name="displayName"/>
                            <prop type="string" name="ipv4AddressType">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="ipv4Addresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipv6AddressType">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="ipv6Addresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="macAddress"/>
                            <prop type="string" name="macAddressType">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop readOnly="True" type="string" name="networkName"/>
                            <prop type="string" name="nicId"/>
                            <prop type="ResourceId" name="virtualNetworkId"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="osName"/>
                        <prop readOnly="True" type="string" name="osType">
                          <enum>
                            <item value="&quot;Linux&quot;"/>
                            <item value="&quot;Other&quot;"/>
                            <item value="&quot;Windows&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Created&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="uuid">
                          <format pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"/>
                        </prop>
                        <prop type="ResourceId" name="vmmServerId"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_VirtualMachineTemplates_ListByResourceGroup" operationId="VirtualMachineTemplates_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachineTemplates">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop type="object" name="extendedLocation" required="True">
                        <prop type="ResourceId" name="name"/>
                        <prop type="string" name="type"/>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ScVmm/virtualMachineTemplates/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="string" name="computerName"/>
                        <prop readOnly="True" type="integer32" name="cpuCount"/>
                        <prop readOnly="True" type="array<object>" name="disks" identifiers="diskId name">
                          <item type="object">
                            <prop type="integer32" name="bus"/>
                            <prop type="string" name="busType"/>
                            <prop type="string" name="createDiffDisk">
                              <enum>
                                <item value="&quot;false&quot;"/>
                                <item value="&quot;true&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="diskId"/>
                            <prop type="integer32" name="diskSizeGB"/>
                            <prop readOnly="True" type="string" name="displayName"/>
                            <prop type="integer32" name="lun"/>
                            <prop readOnly="True" type="integer32" name="maxDiskSizeGB"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="storageQoSPolicy">
                              <prop type="string" name="id"/>
                              <prop type="string" name="name"/>
                            </prop>
                            <prop type="string" name="templateDiskId"/>
                            <prop readOnly="True" type="string" name="vhdFormatType"/>
                            <prop type="string" name="vhdType"/>
                            <prop readOnly="True" type="string" name="volumeType"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="dynamicMemoryEnabled">
                          <enum>
                            <item value="&quot;false&quot;"/>
                            <item value="&quot;true&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer32" name="dynamicMemoryMaxMB"/>
                        <prop readOnly="True" type="integer32" name="dynamicMemoryMinMB"/>
                        <prop readOnly="True" type="integer32" name="generation"/>
                        <prop type="string" name="inventoryItemId"/>
                        <prop readOnly="True" type="string" name="isCustomizable">
                          <enum>
                            <item value="&quot;false&quot;"/>
                            <item value="&quot;true&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="isHighlyAvailable">
                          <enum>
                            <item value="&quot;false&quot;"/>
                            <item value="&quot;true&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="limitCpuForMigration">
                          <enum>
                            <item value="&quot;false&quot;"/>
                            <item value="&quot;true&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer32" name="memoryMB"/>
                        <prop readOnly="True" type="array<object>" name="networkInterfaces" identifiers="nicId name">
                          <item type="object">
                            <prop readOnly="True" type="string" name="displayName"/>
                            <prop type="string" name="ipv4AddressType">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="ipv4Addresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="ipv6AddressType">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<string>" name="ipv6Addresses">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="macAddress"/>
                            <prop type="string" name="macAddressType">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop readOnly="True" type="string" name="networkName"/>
                            <prop type="string" name="nicId"/>
                            <prop type="ResourceId" name="virtualNetworkId"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="osName"/>
                        <prop readOnly="True" type="string" name="osType">
                          <enum>
                            <item value="&quot;Linux&quot;"/>
                            <item value="&quot;Other&quot;"/>
                            <item value="&quot;Windows&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Created&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="uuid">
                          <format pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"/>
                        </prop>
                        <prop type="ResourceId" name="vmmServerId"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
