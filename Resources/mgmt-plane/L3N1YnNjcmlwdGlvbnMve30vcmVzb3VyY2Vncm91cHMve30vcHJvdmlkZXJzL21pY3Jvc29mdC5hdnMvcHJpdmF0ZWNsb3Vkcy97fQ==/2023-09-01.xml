<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}" version="2023-09-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="avs private-cloud">
    <command name="show" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}" version="2023-09-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.privateCloudName" options="private-cloud-name name n" required="True" idPart="name">
          <help short="Name of the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PrivateClouds_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}">
          <request method="get">
            <path>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AVS/privateClouds/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="availability">
                      <prop type="integer32" name="secondaryZone"/>
                      <prop type="string" name="strategy">
                        <enum>
                          <item value="&quot;DualZone&quot;"/>
                          <item value="&quot;SingleZone&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="zone"/>
                    </prop>
                    <prop type="object" name="circuit" cls="Circuit_read">
                      <prop readOnly="True" type="string" name="expressRouteID"/>
                      <prop readOnly="True" type="string" name="expressRoutePrivatePeeringID"/>
                      <prop readOnly="True" type="string" name="primarySubnet"/>
                      <prop readOnly="True" type="string" name="secondarySubnet"/>
                    </prop>
                    <prop type="string" name="dnsZoneType">
                      <enum>
                        <item value="&quot;Private&quot;"/>
                        <item value="&quot;Public&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="keyVaultProperties">
                        <prop readOnly="True" type="string" name="autoDetectedKeyVersion"/>
                        <prop type="string" name="keyName"/>
                        <prop readOnly="True" type="string" name="keyState">
                          <enum>
                            <item value="&quot;AccessDenied&quot;"/>
                            <item value="&quot;Connected&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="keyVaultUrl"/>
                        <prop type="string" name="keyVersion"/>
                        <prop readOnly="True" type="string" name="versionType">
                          <enum>
                            <item value="&quot;AutoDetected&quot;"/>
                            <item value="&quot;Fixed&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="status">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="endpoints">
                      <prop readOnly="True" type="string" name="hcxCloudManager"/>
                      <prop readOnly="True" type="string" name="hcxCloudManagerIp"/>
                      <prop readOnly="True" type="string" name="nsxtManager"/>
                      <prop readOnly="True" type="string" name="nsxtManagerIp"/>
                      <prop readOnly="True" type="string" name="vcenterIp"/>
                      <prop readOnly="True" type="string" name="vcsa"/>
                    </prop>
                    <prop type="array<string>" name="extendedNetworkBlocks">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="externalCloudLinks">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="identitySources">
                      <item type="object">
                        <prop type="string" name="alias"/>
                        <prop type="string" name="baseGroupDN"/>
                        <prop type="string" name="baseUserDN"/>
                        <prop type="string" name="domain"/>
                        <prop type="string" name="name"/>
                        <prop type="password" name="password" secret="True"/>
                        <prop type="string" name="primaryServer"/>
                        <prop type="string" name="secondaryServer"/>
                        <prop type="string" name="ssl">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="username"/>
                      </item>
                    </prop>
                    <prop type="string" name="internet">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="managementCluster" required="True">
                      <prop readOnly="True" type="integer32" name="clusterId"/>
                      <prop type="integer32" name="clusterSize"/>
                      <prop type="array<string>" name="hosts">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Cancelled&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vsanDatastoreName"/>
                    </prop>
                    <prop readOnly="True" type="string" name="managementNetwork"/>
                    <prop type="string" name="networkBlock" required="True"/>
                    <prop readOnly="True" type="string" name="nsxPublicIpQuotaRaised">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="nsxtCertificateThumbprint"/>
                    <prop type="password" name="nsxtPassword" secret="True"/>
                    <prop readOnly="True" type="string" name="provisioningNetwork"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Building&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Cancelled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="@Circuit_read" name="secondaryCircuit"/>
                    <prop readOnly="True" type="string" name="vcenterCertificateThumbprint"/>
                    <prop type="password" name="vcenterPassword" secret="True"/>
                    <prop type="ResourceId" name="virtualNetworkId"/>
                    <prop readOnly="True" type="string" name="vmotionNetwork"/>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="integer32" name="capacity"/>
                    <prop type="string" name="family"/>
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="size"/>
                    <prop type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-09-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}" version="2023-09-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.privateCloudName" options="private-cloud-name name n" required="True" idPart="name">
          <help short="Name of the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PrivateClouds_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}">
          <request method="delete">
            <path>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}" version="2023-09-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.privateCloudName" options="private-cloud-name name n" required="True" idPart="name">
          <help short="Name of the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="PrivateCloud">
        <arg type="object" var="$privateCloud.identity" options="identity" group="PrivateCloud">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$privateCloud.identity.type" options="type" required="True">
            <help short="Type of managed service identity (either system assigned, or none)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$privateCloud.location" options="location l" required="True" group="PrivateCloud">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$privateCloud.sku" options="sku" required="True" group="PrivateCloud">
          <help short="The SKU (Stock Keeping Unit) assigned to this resource."/>
          <arg type="integer32" var="$privateCloud.sku.capacity" options="capacity">
            <help short="If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."/>
          </arg>
          <arg type="string" var="$privateCloud.sku.family" options="family">
            <help short="If the service has different generations of hardware, for the same SKU, then that can be captured here."/>
          </arg>
          <arg type="string" var="$privateCloud.sku.name" options="name" required="True">
            <help short="The name of the SKU. E.g. P3. It is typically a letter+number code"/>
          </arg>
          <arg type="string" var="$privateCloud.sku.size" options="size">
            <help short="The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "/>
          </arg>
          <arg type="string" var="$privateCloud.sku.tier" options="tier">
            <help short="This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."/>
            <enum>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Free" value="&quot;Free&quot;"/>
              <item name="Premium" value="&quot;Premium&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$privateCloud.tags" options="tags" group="PrivateCloud">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$privateCloud.properties.availability" options="availability" group="Properties">
          <help short="Properties describing how the cloud is distributed across availability zones"/>
          <arg type="integer32" var="$privateCloud.properties.availability.secondaryZone" options="secondary-zone">
            <help short="The secondary availability zone for the private cloud"/>
          </arg>
          <arg type="string" var="$privateCloud.properties.availability.strategy" options="strategy">
            <help short="The availability strategy for the private cloud"/>
            <enum>
              <item name="DualZone" value="&quot;DualZone&quot;"/>
              <item name="SingleZone" value="&quot;SingleZone&quot;"/>
            </enum>
          </arg>
          <arg type="integer32" var="$privateCloud.properties.availability.zone" options="zone">
            <help short="The primary availability zone for the private cloud"/>
          </arg>
        </arg>
        <arg type="string" var="$privateCloud.properties.dnsZoneType" options="dns-zone-type" group="Properties">
          <help short="The type of DNS zone to use."/>
          <enum>
            <item name="Private" value="&quot;Private&quot;"/>
            <item name="Public" value="&quot;Public&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$privateCloud.properties.encryption" options="encryption" group="Properties">
          <help short="Customer managed key encryption, can be enabled or disabled"/>
          <arg type="object" var="$privateCloud.properties.encryption.keyVaultProperties" options="key-vault-properties">
            <help short="The key vault where the encryption key is stored"/>
            <arg type="string" var="$privateCloud.properties.encryption.keyVaultProperties.keyName" options="key-name">
              <help short="The name of the key."/>
            </arg>
            <arg type="string" var="$privateCloud.properties.encryption.keyVaultProperties.keyVaultUrl" options="key-vault-url">
              <help short="The URL of the vault."/>
            </arg>
            <arg type="string" var="$privateCloud.properties.encryption.keyVaultProperties.keyVersion" options="key-version">
              <help short="The version of the key."/>
            </arg>
          </arg>
          <arg type="string" var="$privateCloud.properties.encryption.status" options="status">
            <help short="Status of customer managed encryption key"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="array<string>" var="$privateCloud.properties.extendedNetworkBlocks" options="extended-network-blocks" group="Properties">
          <help short="Array of additional networks noncontiguous with networkBlock. Networks must be unique and non-overlapping across VNet in your subscription, on-premise, and this privateCloud networkBlock attribute. Make sure the CIDR format conforms to (A.B.C.D/X)."/>
          <item type="string"/>
        </arg>
        <arg type="array<object>" var="$privateCloud.properties.identitySources" options="identity-sources" group="Properties">
          <help short="vCenter Single Sign On Identity Sources"/>
          <item type="object">
            <arg type="string" var="$privateCloud.properties.identitySources[].alias" options="alias">
              <help short="The domain's NetBIOS name"/>
            </arg>
            <arg type="string" var="$privateCloud.properties.identitySources[].baseGroupDN" options="base-group-dn">
              <help short="The base distinguished name for groups"/>
            </arg>
            <arg type="string" var="$privateCloud.properties.identitySources[].baseUserDN" options="base-user-dn">
              <help short="The base distinguished name for users"/>
            </arg>
            <arg type="string" var="$privateCloud.properties.identitySources[].domain" options="domain">
              <help short="The domain's dns name"/>
            </arg>
            <arg type="string" var="$privateCloud.properties.identitySources[].name" options="name">
              <help short="The name of the identity source"/>
            </arg>
            <arg type="password" var="$privateCloud.properties.identitySources[].password" options="password">
              <help short="The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups."/>
              <prompt msg="Password:"/>
            </arg>
            <arg type="string" var="$privateCloud.properties.identitySources[].primaryServer" options="primary-server">
              <help short="Primary server URL"/>
            </arg>
            <arg type="string" var="$privateCloud.properties.identitySources[].secondaryServer" options="secondary-server">
              <help short="Secondary server URL"/>
            </arg>
            <arg type="string" var="$privateCloud.properties.identitySources[].ssl" options="ssl">
              <help short="Protect LDAP communication using SSL certificate (LDAPS)"/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$privateCloud.properties.identitySources[].username" options="username">
              <help short="The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$privateCloud.properties.internet" options="internet" group="Properties">
          <help short="Connectivity to internet is enabled or disabled"/>
          <default value="&quot;Disabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$privateCloud.properties.managementCluster" options="management-cluster" group="Properties">
          <help short="The default cluster used for management"/>
          <arg type="integer32" var="$privateCloud.properties.managementCluster.clusterSize" options="cluster-size">
            <help short="The cluster size"/>
          </arg>
          <arg type="array<string>" var="$privateCloud.properties.managementCluster.hosts" options="hosts">
            <help short="The hosts"/>
            <item type="string"/>
          </arg>
          <arg type="string" var="$privateCloud.properties.managementCluster.vsanDatastoreName" options="vsan-datastore-name">
            <help short="Name of the vsan datastore associated with the cluster"/>
          </arg>
        </arg>
        <arg type="string" var="$privateCloud.properties.networkBlock" options="network-block" group="Properties">
          <help short="The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22"/>
        </arg>
        <arg type="password" var="$privateCloud.properties.nsxtPassword" options="nsxt-password" group="Properties">
          <help short="Optionally, set the NSX-T Manager password when the private cloud is created"/>
          <prompt msg="Password:"/>
        </arg>
        <arg type="password" var="$privateCloud.properties.vcenterPassword" options="vcenter-password" group="Properties">
          <help short="Optionally, set the vCenter admin password when the private cloud is created"/>
          <prompt msg="Password:"/>
        </arg>
        <arg type="ResourceId" var="$privateCloud.properties.virtualNetworkId" options="virtual-network-id" group="Properties">
          <help short="Azure resource ID of the virtual network"/>
        </arg>
      </argGroup>
      <operation operationId="PrivateClouds_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}">
          <request method="put">
            <path>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="privateCloud" required="True" clientFlatten="True">
                  <prop type="object" name="identity" arg="$privateCloud.identity">
                    <prop type="string" name="type" arg="$privateCloud.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$privateCloud.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="availability" arg="$privateCloud.properties.availability">
                      <prop type="integer32" name="secondaryZone" arg="$privateCloud.properties.availability.secondaryZone"/>
                      <prop type="string" name="strategy" arg="$privateCloud.properties.availability.strategy">
                        <enum>
                          <item value="&quot;DualZone&quot;"/>
                          <item value="&quot;SingleZone&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="zone" arg="$privateCloud.properties.availability.zone"/>
                    </prop>
                    <prop type="string" name="dnsZoneType" arg="$privateCloud.properties.dnsZoneType">
                      <enum>
                        <item value="&quot;Private&quot;"/>
                        <item value="&quot;Public&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="encryption" arg="$privateCloud.properties.encryption">
                      <prop type="object" name="keyVaultProperties" arg="$privateCloud.properties.encryption.keyVaultProperties">
                        <prop type="string" name="keyName" arg="$privateCloud.properties.encryption.keyVaultProperties.keyName"/>
                        <prop type="string" name="keyVaultUrl" arg="$privateCloud.properties.encryption.keyVaultProperties.keyVaultUrl"/>
                        <prop type="string" name="keyVersion" arg="$privateCloud.properties.encryption.keyVaultProperties.keyVersion"/>
                      </prop>
                      <prop type="string" name="status" arg="$privateCloud.properties.encryption.status">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="extendedNetworkBlocks" arg="$privateCloud.properties.extendedNetworkBlocks">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="identitySources" arg="$privateCloud.properties.identitySources">
                      <item type="object">
                        <prop type="string" name="alias" arg="$privateCloud.properties.identitySources[].alias"/>
                        <prop type="string" name="baseGroupDN" arg="$privateCloud.properties.identitySources[].baseGroupDN"/>
                        <prop type="string" name="baseUserDN" arg="$privateCloud.properties.identitySources[].baseUserDN"/>
                        <prop type="string" name="domain" arg="$privateCloud.properties.identitySources[].domain"/>
                        <prop type="string" name="name" arg="$privateCloud.properties.identitySources[].name"/>
                        <prop type="password" name="password" arg="$privateCloud.properties.identitySources[].password" secret="True"/>
                        <prop type="string" name="primaryServer" arg="$privateCloud.properties.identitySources[].primaryServer"/>
                        <prop type="string" name="secondaryServer" arg="$privateCloud.properties.identitySources[].secondaryServer"/>
                        <prop type="string" name="ssl" arg="$privateCloud.properties.identitySources[].ssl">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="username" arg="$privateCloud.properties.identitySources[].username"/>
                      </item>
                    </prop>
                    <prop type="string" name="internet" arg="$privateCloud.properties.internet">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="managementCluster" arg="$privateCloud.properties.managementCluster" required="True">
                      <prop type="integer32" name="clusterSize" arg="$privateCloud.properties.managementCluster.clusterSize"/>
                      <prop type="array<string>" name="hosts" arg="$privateCloud.properties.managementCluster.hosts">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="vsanDatastoreName" arg="$privateCloud.properties.managementCluster.vsanDatastoreName"/>
                    </prop>
                    <prop type="string" name="networkBlock" arg="$privateCloud.properties.networkBlock" required="True"/>
                    <prop type="password" name="nsxtPassword" arg="$privateCloud.properties.nsxtPassword" secret="True"/>
                    <prop type="password" name="vcenterPassword" arg="$privateCloud.properties.vcenterPassword" secret="True"/>
                    <prop type="ResourceId" name="virtualNetworkId" arg="$privateCloud.properties.virtualNetworkId"/>
                  </prop>
                  <prop type="object" name="sku" arg="$privateCloud.sku" required="True">
                    <prop type="integer32" name="capacity" arg="$privateCloud.sku.capacity"/>
                    <prop type="string" name="family" arg="$privateCloud.sku.family"/>
                    <prop type="string" name="name" arg="$privateCloud.sku.name" required="True"/>
                    <prop type="string" name="size" arg="$privateCloud.sku.size"/>
                    <prop type="string" name="tier" arg="$privateCloud.sku.tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$privateCloud.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AVS/privateClouds/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="availability">
                      <prop type="integer32" name="secondaryZone"/>
                      <prop type="string" name="strategy">
                        <enum>
                          <item value="&quot;DualZone&quot;"/>
                          <item value="&quot;SingleZone&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="zone"/>
                    </prop>
                    <prop type="object" name="circuit" cls="Circuit_read">
                      <prop readOnly="True" type="string" name="expressRouteID"/>
                      <prop readOnly="True" type="string" name="expressRoutePrivatePeeringID"/>
                      <prop readOnly="True" type="string" name="primarySubnet"/>
                      <prop readOnly="True" type="string" name="secondarySubnet"/>
                    </prop>
                    <prop type="string" name="dnsZoneType">
                      <enum>
                        <item value="&quot;Private&quot;"/>
                        <item value="&quot;Public&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="keyVaultProperties">
                        <prop readOnly="True" type="string" name="autoDetectedKeyVersion"/>
                        <prop type="string" name="keyName"/>
                        <prop readOnly="True" type="string" name="keyState">
                          <enum>
                            <item value="&quot;AccessDenied&quot;"/>
                            <item value="&quot;Connected&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="keyVaultUrl"/>
                        <prop type="string" name="keyVersion"/>
                        <prop readOnly="True" type="string" name="versionType">
                          <enum>
                            <item value="&quot;AutoDetected&quot;"/>
                            <item value="&quot;Fixed&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="status">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="endpoints">
                      <prop readOnly="True" type="string" name="hcxCloudManager"/>
                      <prop readOnly="True" type="string" name="hcxCloudManagerIp"/>
                      <prop readOnly="True" type="string" name="nsxtManager"/>
                      <prop readOnly="True" type="string" name="nsxtManagerIp"/>
                      <prop readOnly="True" type="string" name="vcenterIp"/>
                      <prop readOnly="True" type="string" name="vcsa"/>
                    </prop>
                    <prop type="array<string>" name="extendedNetworkBlocks">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="externalCloudLinks">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="identitySources">
                      <item type="object">
                        <prop type="string" name="alias"/>
                        <prop type="string" name="baseGroupDN"/>
                        <prop type="string" name="baseUserDN"/>
                        <prop type="string" name="domain"/>
                        <prop type="string" name="name"/>
                        <prop type="password" name="password" secret="True"/>
                        <prop type="string" name="primaryServer"/>
                        <prop type="string" name="secondaryServer"/>
                        <prop type="string" name="ssl">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="username"/>
                      </item>
                    </prop>
                    <prop type="string" name="internet">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="managementCluster" required="True">
                      <prop readOnly="True" type="integer32" name="clusterId"/>
                      <prop type="integer32" name="clusterSize"/>
                      <prop type="array<string>" name="hosts">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Cancelled&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vsanDatastoreName"/>
                    </prop>
                    <prop readOnly="True" type="string" name="managementNetwork"/>
                    <prop type="string" name="networkBlock" required="True"/>
                    <prop readOnly="True" type="string" name="nsxPublicIpQuotaRaised">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="nsxtCertificateThumbprint"/>
                    <prop type="password" name="nsxtPassword" secret="True"/>
                    <prop readOnly="True" type="string" name="provisioningNetwork"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Building&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Cancelled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="@Circuit_read" name="secondaryCircuit"/>
                    <prop readOnly="True" type="string" name="vcenterCertificateThumbprint"/>
                    <prop type="password" name="vcenterPassword" secret="True"/>
                    <prop type="ResourceId" name="virtualNetworkId"/>
                    <prop readOnly="True" type="string" name="vmotionNetwork"/>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="integer32" name="capacity"/>
                    <prop type="string" name="family"/>
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="size"/>
                    <prop type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}" version="2023-09-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.privateCloudName" options="private-cloud-name name n" required="True" idPart="name">
          <help short="Name of the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="PrivateCloud">
        <arg nullable="True" type="object" var="$privateCloud.identity" options="identity" group="PrivateCloud">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$privateCloud.identity.type" options="type">
            <help short="Type of managed service identity (either system assigned, or none)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$privateCloud.sku" options="sku" group="PrivateCloud">
          <help short="The SKU (Stock Keeping Unit) assigned to this resource."/>
          <arg nullable="True" type="integer32" var="$privateCloud.sku.capacity" options="capacity">
            <help short="If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."/>
          </arg>
          <arg nullable="True" type="string" var="$privateCloud.sku.family" options="family">
            <help short="If the service has different generations of hardware, for the same SKU, then that can be captured here."/>
          </arg>
          <arg type="string" var="$privateCloud.sku.name" options="name">
            <help short="The name of the SKU. E.g. P3. It is typically a letter+number code"/>
          </arg>
          <arg nullable="True" type="string" var="$privateCloud.sku.size" options="size">
            <help short="The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "/>
          </arg>
          <arg nullable="True" type="string" var="$privateCloud.sku.tier" options="tier">
            <help short="This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."/>
            <enum>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Free" value="&quot;Free&quot;"/>
              <item name="Premium" value="&quot;Premium&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$privateCloud.tags" options="tags" group="PrivateCloud">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$privateCloud.properties.dnsZoneType" options="dns-zone-type" group="Properties">
          <help short="The type of DNS zone to use."/>
          <enum>
            <item name="Private" value="&quot;Private&quot;"/>
            <item name="Public" value="&quot;Public&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$privateCloud.properties.encryption" options="encryption" group="Properties">
          <help short="Customer managed key encryption, can be enabled or disabled"/>
          <arg nullable="True" type="object" var="$privateCloud.properties.encryption.keyVaultProperties" options="key-vault-properties">
            <help short="The key vault where the encryption key is stored"/>
            <arg nullable="True" type="string" var="$privateCloud.properties.encryption.keyVaultProperties.keyName" options="key-name">
              <help short="The name of the key."/>
            </arg>
            <arg nullable="True" type="string" var="$privateCloud.properties.encryption.keyVaultProperties.keyVaultUrl" options="key-vault-url">
              <help short="The URL of the vault."/>
            </arg>
            <arg nullable="True" type="string" var="$privateCloud.properties.encryption.keyVaultProperties.keyVersion" options="key-version">
              <help short="The version of the key."/>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$privateCloud.properties.encryption.status" options="status">
            <help short="Status of customer managed encryption key"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="array<string>" var="$privateCloud.properties.extendedNetworkBlocks" options="extended-network-blocks" group="Properties">
          <help short="Array of additional networks noncontiguous with networkBlock. Networks must be unique and non-overlapping across VNet in your subscription, on-premise, and this privateCloud networkBlock attribute. Make sure the CIDR format conforms to (A.B.C.D/X)."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$privateCloud.properties.identitySources" options="identity-sources" group="Properties">
          <help short="vCenter Single Sign On Identity Sources"/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$privateCloud.properties.identitySources[].alias" options="alias">
              <help short="The domain's NetBIOS name"/>
            </arg>
            <arg nullable="True" type="string" var="$privateCloud.properties.identitySources[].baseGroupDN" options="base-group-dn">
              <help short="The base distinguished name for groups"/>
            </arg>
            <arg nullable="True" type="string" var="$privateCloud.properties.identitySources[].baseUserDN" options="base-user-dn">
              <help short="The base distinguished name for users"/>
            </arg>
            <arg nullable="True" type="string" var="$privateCloud.properties.identitySources[].domain" options="domain">
              <help short="The domain's dns name"/>
            </arg>
            <arg nullable="True" type="string" var="$privateCloud.properties.identitySources[].name" options="name">
              <help short="The name of the identity source"/>
            </arg>
            <arg nullable="True" type="password" var="$privateCloud.properties.identitySources[].password" options="password">
              <help short="The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups."/>
              <prompt msg="Password:"/>
            </arg>
            <arg nullable="True" type="string" var="$privateCloud.properties.identitySources[].primaryServer" options="primary-server">
              <help short="Primary server URL"/>
            </arg>
            <arg nullable="True" type="string" var="$privateCloud.properties.identitySources[].secondaryServer" options="secondary-server">
              <help short="Secondary server URL"/>
            </arg>
            <arg nullable="True" type="string" var="$privateCloud.properties.identitySources[].ssl" options="ssl">
              <help short="Protect LDAP communication using SSL certificate (LDAPS)"/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$privateCloud.properties.identitySources[].username" options="username">
              <help short="The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$privateCloud.properties.internet" options="internet" group="Properties">
          <help short="Connectivity to internet is enabled or disabled"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$privateCloud.properties.managementCluster" options="management-cluster" group="Properties">
          <help short="The default cluster used for management"/>
          <arg nullable="True" type="integer32" var="$privateCloud.properties.managementCluster.clusterSize" options="cluster-size">
            <help short="The cluster size"/>
          </arg>
          <arg nullable="True" type="array<string>" var="$privateCloud.properties.managementCluster.hosts" options="hosts">
            <help short="The hosts"/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="string" var="$privateCloud.properties.managementCluster.vsanDatastoreName" options="vsan-datastore-name">
            <help short="Name of the vsan datastore associated with the cluster"/>
          </arg>
        </arg>
        <arg type="string" var="$privateCloud.properties.networkBlock" options="network-block" group="Properties">
          <help short="The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22"/>
        </arg>
        <arg nullable="True" type="password" var="$privateCloud.properties.nsxtPassword" options="nsxt-password" group="Properties">
          <help short="Optionally, set the NSX-T Manager password when the private cloud is created"/>
          <prompt msg="Password:"/>
        </arg>
        <arg nullable="True" type="password" var="$privateCloud.properties.vcenterPassword" options="vcenter-password" group="Properties">
          <help short="Optionally, set the vCenter admin password when the private cloud is created"/>
          <prompt msg="Password:"/>
        </arg>
      </argGroup>
      <operation operationId="PrivateClouds_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}">
          <request method="get">
            <path>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="PrivateCloud_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AVS/privateClouds/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="availability">
                      <prop type="integer32" name="secondaryZone"/>
                      <prop type="string" name="strategy">
                        <enum>
                          <item value="&quot;DualZone&quot;"/>
                          <item value="&quot;SingleZone&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="zone"/>
                    </prop>
                    <prop type="object" name="circuit" cls="Circuit_read">
                      <prop readOnly="True" type="string" name="expressRouteID"/>
                      <prop readOnly="True" type="string" name="expressRoutePrivatePeeringID"/>
                      <prop readOnly="True" type="string" name="primarySubnet"/>
                      <prop readOnly="True" type="string" name="secondarySubnet"/>
                    </prop>
                    <prop type="string" name="dnsZoneType">
                      <enum>
                        <item value="&quot;Private&quot;"/>
                        <item value="&quot;Public&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="keyVaultProperties">
                        <prop readOnly="True" type="string" name="autoDetectedKeyVersion"/>
                        <prop type="string" name="keyName"/>
                        <prop readOnly="True" type="string" name="keyState">
                          <enum>
                            <item value="&quot;AccessDenied&quot;"/>
                            <item value="&quot;Connected&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="keyVaultUrl"/>
                        <prop type="string" name="keyVersion"/>
                        <prop readOnly="True" type="string" name="versionType">
                          <enum>
                            <item value="&quot;AutoDetected&quot;"/>
                            <item value="&quot;Fixed&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="status">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="endpoints">
                      <prop readOnly="True" type="string" name="hcxCloudManager"/>
                      <prop readOnly="True" type="string" name="hcxCloudManagerIp"/>
                      <prop readOnly="True" type="string" name="nsxtManager"/>
                      <prop readOnly="True" type="string" name="nsxtManagerIp"/>
                      <prop readOnly="True" type="string" name="vcenterIp"/>
                      <prop readOnly="True" type="string" name="vcsa"/>
                    </prop>
                    <prop type="array<string>" name="extendedNetworkBlocks">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="externalCloudLinks">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="identitySources">
                      <item type="object">
                        <prop type="string" name="alias"/>
                        <prop type="string" name="baseGroupDN"/>
                        <prop type="string" name="baseUserDN"/>
                        <prop type="string" name="domain"/>
                        <prop type="string" name="name"/>
                        <prop type="password" name="password" secret="True"/>
                        <prop type="string" name="primaryServer"/>
                        <prop type="string" name="secondaryServer"/>
                        <prop type="string" name="ssl">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="username"/>
                      </item>
                    </prop>
                    <prop type="string" name="internet">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="managementCluster" required="True">
                      <prop readOnly="True" type="integer32" name="clusterId"/>
                      <prop type="integer32" name="clusterSize"/>
                      <prop type="array<string>" name="hosts">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Cancelled&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vsanDatastoreName"/>
                    </prop>
                    <prop readOnly="True" type="string" name="managementNetwork"/>
                    <prop type="string" name="networkBlock" required="True"/>
                    <prop readOnly="True" type="string" name="nsxPublicIpQuotaRaised">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="nsxtCertificateThumbprint"/>
                    <prop type="password" name="nsxtPassword" secret="True"/>
                    <prop readOnly="True" type="string" name="provisioningNetwork"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Building&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Cancelled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="@Circuit_read" name="secondaryCircuit"/>
                    <prop readOnly="True" type="string" name="vcenterCertificateThumbprint"/>
                    <prop type="password" name="vcenterPassword" secret="True"/>
                    <prop type="ResourceId" name="virtualNetworkId"/>
                    <prop readOnly="True" type="string" name="vmotionNetwork"/>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="integer32" name="capacity"/>
                    <prop type="string" name="family"/>
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="size"/>
                    <prop type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="privateCloud" required="True" clientFlatten="True">
              <prop type="object" name="identity" arg="$privateCloud.identity">
                <prop type="string" name="type" arg="$privateCloud.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="dnsZoneType" arg="$privateCloud.properties.dnsZoneType">
                  <enum>
                    <item value="&quot;Private&quot;"/>
                    <item value="&quot;Public&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="encryption" arg="$privateCloud.properties.encryption">
                  <prop type="object" name="keyVaultProperties" arg="$privateCloud.properties.encryption.keyVaultProperties">
                    <prop type="string" name="keyName" arg="$privateCloud.properties.encryption.keyVaultProperties.keyName"/>
                    <prop type="string" name="keyVaultUrl" arg="$privateCloud.properties.encryption.keyVaultProperties.keyVaultUrl"/>
                    <prop type="string" name="keyVersion" arg="$privateCloud.properties.encryption.keyVaultProperties.keyVersion"/>
                  </prop>
                  <prop type="string" name="status" arg="$privateCloud.properties.encryption.status">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="array<string>" name="extendedNetworkBlocks" arg="$privateCloud.properties.extendedNetworkBlocks">
                  <item type="string"/>
                </prop>
                <prop type="array<object>" name="identitySources" arg="$privateCloud.properties.identitySources">
                  <item type="object">
                    <prop type="string" name="alias" arg="$privateCloud.properties.identitySources[].alias"/>
                    <prop type="string" name="baseGroupDN" arg="$privateCloud.properties.identitySources[].baseGroupDN"/>
                    <prop type="string" name="baseUserDN" arg="$privateCloud.properties.identitySources[].baseUserDN"/>
                    <prop type="string" name="domain" arg="$privateCloud.properties.identitySources[].domain"/>
                    <prop type="string" name="name" arg="$privateCloud.properties.identitySources[].name"/>
                    <prop type="password" name="password" arg="$privateCloud.properties.identitySources[].password" secret="True"/>
                    <prop type="string" name="primaryServer" arg="$privateCloud.properties.identitySources[].primaryServer"/>
                    <prop type="string" name="secondaryServer" arg="$privateCloud.properties.identitySources[].secondaryServer"/>
                    <prop type="string" name="ssl" arg="$privateCloud.properties.identitySources[].ssl">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="username" arg="$privateCloud.properties.identitySources[].username"/>
                  </item>
                </prop>
                <prop type="string" name="internet" arg="$privateCloud.properties.internet">
                  <default value="&quot;Disabled&quot;"/>
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="managementCluster" arg="$privateCloud.properties.managementCluster" required="True">
                  <prop type="integer32" name="clusterSize" arg="$privateCloud.properties.managementCluster.clusterSize"/>
                  <prop type="array<string>" name="hosts" arg="$privateCloud.properties.managementCluster.hosts">
                    <item type="string"/>
                  </prop>
                  <prop type="string" name="vsanDatastoreName" arg="$privateCloud.properties.managementCluster.vsanDatastoreName"/>
                </prop>
                <prop type="string" name="networkBlock" arg="$privateCloud.properties.networkBlock" required="True"/>
                <prop type="password" name="nsxtPassword" arg="$privateCloud.properties.nsxtPassword" secret="True"/>
                <prop type="password" name="vcenterPassword" arg="$privateCloud.properties.vcenterPassword" secret="True"/>
              </prop>
              <prop type="object" name="sku" arg="$privateCloud.sku" required="True">
                <prop type="integer32" name="capacity" arg="$privateCloud.sku.capacity"/>
                <prop type="string" name="family" arg="$privateCloud.sku.family"/>
                <prop type="string" name="name" arg="$privateCloud.sku.name" required="True"/>
                <prop type="string" name="size" arg="$privateCloud.sku.size"/>
                <prop type="string" name="tier" arg="$privateCloud.sku.tier">
                  <enum>
                    <item value="&quot;Basic&quot;"/>
                    <item value="&quot;Free&quot;"/>
                    <item value="&quot;Premium&quot;"/>
                    <item value="&quot;Standard&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$privateCloud.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="PrivateClouds_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}">
          <request method="put">
            <path>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@PrivateCloud_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
