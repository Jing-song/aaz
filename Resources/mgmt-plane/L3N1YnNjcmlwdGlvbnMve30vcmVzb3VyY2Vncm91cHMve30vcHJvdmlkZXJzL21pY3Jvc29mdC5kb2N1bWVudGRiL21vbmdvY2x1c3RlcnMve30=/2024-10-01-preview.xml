<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.documentdb/mongoclusters/{}" version="2024-10-01-preview" swagger="mgmt-plane/mongocluster/ResourceProviders/Microsoft.DocumentDB/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRG9jdW1lbnREQi9tb25nb0NsdXN0ZXJzL3ttb25nb0NsdXN0ZXJOYW1lfQ==/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
  <commandGroup name="document-db mongo-cluster">
    <command name="show" version="2024-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.documentdb/mongoclusters/{}" version="2024-10-01-preview" swagger="mgmt-plane/mongocluster/ResourceProviders/Microsoft.DocumentDB/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRG9jdW1lbnREQi9tb25nb0NsdXN0ZXJzL3ttb25nb0NsdXN0ZXJOYW1lfQ==/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.mongoClusterName" options="mongo-cluster-name name n" required="True" idPart="name">
          <help short="The name of the mongo cluster."/>
          <format pattern="^[a-z0-9]+(-[a-z0-9]+)*" maxLength="40" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="MongoClusters_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}">
          <request method="get">
            <path>
              <param type="string" name="mongoClusterName" arg="$Path.mongoClusterName" required="True">
                <format pattern="^[a-z0-9]+(-[a-z0-9]+)*" maxLength="40" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DocumentDB/mongoClusters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="administrator">
                      <prop type="string" name="userName"/>
                    </prop>
                    <prop type="object" name="backup">
                      <prop readOnly="True" type="string" name="earliestRestoreTime"/>
                    </prop>
                    <prop readOnly="True" type="string" name="clusterStatus">
                      <enum>
                        <item value="&quot;Dropping&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                        <item value="&quot;Starting&quot;"/>
                        <item value="&quot;Stopped&quot;"/>
                        <item value="&quot;Stopping&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="compute">
                      <prop type="string" name="tier"/>
                    </prop>
                    <prop readOnly="True" type="string" name="connectionString"/>
                    <prop type="object" name="dataApi">
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="highAvailability">
                      <prop type="string" name="targetMode">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;SameZone&quot;"/>
                          <item value="&quot;ZoneRedundantPreferred&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="infrastructureVersion"/>
                    <prop type="array<string>" name="previewFeatures">
                      <item type="string">
                        <enum>
                          <item value="&quot;GeoReplicas&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Dropping&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="replica">
                      <prop readOnly="True" type="string" name="replicationState">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Broken&quot;"/>
                          <item value="&quot;Catchup&quot;"/>
                          <item value="&quot;Provisioning&quot;"/>
                          <item value="&quot;Reconfiguring&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="role">
                        <enum>
                          <item value="&quot;AsyncReplica&quot;"/>
                          <item value="&quot;GeoAsyncReplica&quot;"/>
                          <item value="&quot;Primary&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="sourceResourceId"/>
                    </prop>
                    <prop type="string" name="serverVersion"/>
                    <prop type="object" name="sharding">
                      <prop type="integer32" name="shardCount"/>
                    </prop>
                    <prop type="object" name="storage">
                      <prop type="integer64" name="sizeGb"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-10-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.documentdb/mongoclusters/{}" version="2024-10-01-preview" swagger="mgmt-plane/mongocluster/ResourceProviders/Microsoft.DocumentDB/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRG9jdW1lbnREQi9tb25nb0NsdXN0ZXJzL3ttb25nb0NsdXN0ZXJOYW1lfQ==/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.mongoClusterName" options="mongo-cluster-name name n" required="True" idPart="name">
          <help short="The name of the mongo cluster."/>
          <format pattern="^[a-z0-9]+(-[a-z0-9]+)*" maxLength="40" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="MongoClusters_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}">
          <request method="delete">
            <path>
              <param type="string" name="mongoClusterName" arg="$Path.mongoClusterName" required="True">
                <format pattern="^[a-z0-9]+(-[a-z0-9]+)*" maxLength="40" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.documentdb/mongoclusters/{}" version="2024-10-01-preview" swagger="mgmt-plane/mongocluster/ResourceProviders/Microsoft.DocumentDB/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRG9jdW1lbnREQi9tb25nb0NsdXN0ZXJzL3ttb25nb0NsdXN0ZXJOYW1lfQ==/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.mongoClusterName" options="mongo-cluster-name name n" required="True" idPart="name">
          <help short="The name of the mongo cluster."/>
          <format pattern="^[a-z0-9]+(-[a-z0-9]+)*" maxLength="40" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$resource.properties.administrator" options="administrator" group="Properties">
          <help short="The local administrator properties for the mongo cluster."/>
          <arg type="password" var="$resource.properties.administrator.password" options="password">
            <help short="The administrator password."/>
            <prompt msg="Password:"/>
          </arg>
          <arg type="string" var="$resource.properties.administrator.userName" options="user-name">
            <help short="The administrator user name."/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.compute" options="compute" group="Properties">
          <help short="The compute properties of the mongo cluster."/>
          <arg type="string" var="$resource.properties.compute.tier" options="tier">
            <help short="The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."/>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.createMode" options="create-mode" group="Properties">
          <help short="The mode to create a mongo cluster."/>
          <enum>
            <item name="Default" value="&quot;Default&quot;"/>
            <item name="GeoReplica" value="&quot;GeoReplica&quot;"/>
            <item name="PointInTimeRestore" value="&quot;PointInTimeRestore&quot;"/>
            <item name="Replica" value="&quot;Replica&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$resource.properties.dataApi" options="data-api" group="Properties">
          <help short="The Data API properties of the mongo cluster."/>
          <arg type="string" var="$resource.properties.dataApi.mode" options="mode">
            <help short="The mode to indicate whether the Mongo Data API is enabled for a cluster."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.highAvailability" options="high-availability" group="Properties">
          <help short="The high availability properties of the mongo cluster."/>
          <arg type="string" var="$resource.properties.highAvailability.targetMode" options="target-mode">
            <help short="The target high availability mode requested for the cluster."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="SameZone" value="&quot;SameZone&quot;"/>
              <item name="ZoneRedundantPreferred" value="&quot;ZoneRedundantPreferred&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="array<string>" var="$resource.properties.previewFeatures" options="preview-features" group="Properties">
          <help short="List of private endpoint connections."/>
          <item type="string">
            <enum>
              <item name="GeoReplicas" value="&quot;GeoReplicas&quot;"/>
            </enum>
          </item>
        </arg>
        <arg type="string" var="$resource.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="Whether or not public endpoint access is allowed for this mongo cluster."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$resource.properties.replicaParameters" options="replica-parameters" group="Properties">
          <help short="The parameters to create a replica mongo cluster."/>
          <arg type="string" var="$resource.properties.replicaParameters.sourceLocation" options="source-location" required="True">
            <help short="The location of the source cluster"/>
          </arg>
          <arg type="ResourceId" var="$resource.properties.replicaParameters.sourceResourceId" options="source-resource-id" required="True">
            <help short="The id of the replication source cluster."/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.restoreParameters" options="restore-parameters" group="Properties">
          <help short="The parameters to create a point-in-time restore mongo cluster."/>
          <arg type="dateTime" var="$resource.properties.restoreParameters.pointInTimeUTC" options="point-in-time-utc">
            <help short="UTC point in time to restore a mongo cluster"/>
          </arg>
          <arg type="ResourceId" var="$resource.properties.restoreParameters.sourceResourceId" options="source-resource-id">
            <help short="Resource ID to locate the source cluster to restore"/>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.serverVersion" options="server-version" group="Properties">
          <help short="The Mongo DB server version. Defaults to the latest available version if not specified."/>
        </arg>
        <arg type="object" var="$resource.properties.sharding" options="sharding" group="Properties">
          <help short="The sharding properties of the mongo cluster."/>
          <arg type="integer32" var="$resource.properties.sharding.shardCount" options="shard-count">
            <help short="Number of shards to provision on the cluster."/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.storage" options="storage" group="Properties">
          <help short="The storage properties of the mongo cluster."/>
          <arg type="integer64" var="$resource.properties.storage.sizeGb" options="size-gb">
            <help short="The size of the data disk assigned to each server."/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="MongoClusters_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}">
          <request method="put">
            <path>
              <param type="string" name="mongoClusterName" arg="$Path.mongoClusterName" required="True">
                <format pattern="^[a-z0-9]+(-[a-z0-9]+)*" maxLength="40" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="administrator" arg="$resource.properties.administrator">
                      <prop type="password" name="password" arg="$resource.properties.administrator.password" secret="True"/>
                      <prop type="string" name="userName" arg="$resource.properties.administrator.userName"/>
                    </prop>
                    <prop type="object" name="compute" arg="$resource.properties.compute">
                      <prop type="string" name="tier" arg="$resource.properties.compute.tier"/>
                    </prop>
                    <prop type="string" name="createMode" arg="$resource.properties.createMode">
                      <enum>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;GeoReplica&quot;"/>
                        <item value="&quot;PointInTimeRestore&quot;"/>
                        <item value="&quot;Replica&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="dataApi" arg="$resource.properties.dataApi">
                      <prop type="string" name="mode" arg="$resource.properties.dataApi.mode">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="highAvailability" arg="$resource.properties.highAvailability">
                      <prop type="string" name="targetMode" arg="$resource.properties.highAvailability.targetMode">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;SameZone&quot;"/>
                          <item value="&quot;ZoneRedundantPreferred&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="previewFeatures" arg="$resource.properties.previewFeatures">
                      <item type="string">
                        <enum>
                          <item value="&quot;GeoReplicas&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$resource.properties.publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="replicaParameters" arg="$resource.properties.replicaParameters">
                      <prop type="string" name="sourceLocation" arg="$resource.properties.replicaParameters.sourceLocation" required="True"/>
                      <prop type="ResourceId" name="sourceResourceId" arg="$resource.properties.replicaParameters.sourceResourceId" required="True"/>
                    </prop>
                    <prop type="object" name="restoreParameters" arg="$resource.properties.restoreParameters">
                      <prop type="dateTime" name="pointInTimeUTC" arg="$resource.properties.restoreParameters.pointInTimeUTC"/>
                      <prop type="ResourceId" name="sourceResourceId" arg="$resource.properties.restoreParameters.sourceResourceId"/>
                    </prop>
                    <prop type="string" name="serverVersion" arg="$resource.properties.serverVersion"/>
                    <prop type="object" name="sharding" arg="$resource.properties.sharding">
                      <prop type="integer32" name="shardCount" arg="$resource.properties.sharding.shardCount"/>
                    </prop>
                    <prop type="object" name="storage" arg="$resource.properties.storage">
                      <prop type="integer64" name="sizeGb" arg="$resource.properties.storage.sizeGb"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DocumentDB/mongoClusters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="administrator">
                      <prop type="string" name="userName"/>
                    </prop>
                    <prop type="object" name="backup">
                      <prop readOnly="True" type="string" name="earliestRestoreTime"/>
                    </prop>
                    <prop readOnly="True" type="string" name="clusterStatus">
                      <enum>
                        <item value="&quot;Dropping&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                        <item value="&quot;Starting&quot;"/>
                        <item value="&quot;Stopped&quot;"/>
                        <item value="&quot;Stopping&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="compute">
                      <prop type="string" name="tier"/>
                    </prop>
                    <prop readOnly="True" type="string" name="connectionString"/>
                    <prop type="object" name="dataApi">
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="highAvailability">
                      <prop type="string" name="targetMode">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;SameZone&quot;"/>
                          <item value="&quot;ZoneRedundantPreferred&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="infrastructureVersion"/>
                    <prop type="array<string>" name="previewFeatures">
                      <item type="string">
                        <enum>
                          <item value="&quot;GeoReplicas&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Dropping&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="replica">
                      <prop readOnly="True" type="string" name="replicationState">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Broken&quot;"/>
                          <item value="&quot;Catchup&quot;"/>
                          <item value="&quot;Provisioning&quot;"/>
                          <item value="&quot;Reconfiguring&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="role">
                        <enum>
                          <item value="&quot;AsyncReplica&quot;"/>
                          <item value="&quot;GeoAsyncReplica&quot;"/>
                          <item value="&quot;Primary&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="sourceResourceId"/>
                    </prop>
                    <prop type="string" name="serverVersion"/>
                    <prop type="object" name="sharding">
                      <prop type="integer32" name="shardCount"/>
                    </prop>
                    <prop type="object" name="storage">
                      <prop type="integer64" name="sizeGb"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.documentdb/mongoclusters/{}" version="2024-10-01-preview" swagger="mgmt-plane/mongocluster/ResourceProviders/Microsoft.DocumentDB/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRG9jdW1lbnREQi9tb25nb0NsdXN0ZXJzL3ttb25nb0NsdXN0ZXJOYW1lfQ==/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.mongoClusterName" options="mongo-cluster-name name n" required="True" idPart="name">
          <help short="The name of the mongo cluster."/>
          <format pattern="^[a-z0-9]+(-[a-z0-9]+)*" maxLength="40" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$resource.properties.administrator" options="administrator" group="Properties">
          <help short="The local administrator properties for the mongo cluster."/>
          <arg nullable="True" type="password" var="$resource.properties.administrator.password" options="password">
            <help short="The administrator password."/>
            <prompt msg="Password:"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.administrator.userName" options="user-name">
            <help short="The administrator user name."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.compute" options="compute" group="Properties">
          <help short="The compute properties of the mongo cluster."/>
          <arg nullable="True" type="string" var="$resource.properties.compute.tier" options="tier">
            <help short="The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.dataApi" options="data-api" group="Properties">
          <help short="The Data API properties of the mongo cluster."/>
          <arg nullable="True" type="string" var="$resource.properties.dataApi.mode" options="mode">
            <help short="The mode to indicate whether the Mongo Data API is enabled for a cluster."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.highAvailability" options="high-availability" group="Properties">
          <help short="The high availability properties of the mongo cluster."/>
          <arg nullable="True" type="string" var="$resource.properties.highAvailability.targetMode" options="target-mode">
            <help short="The target high availability mode requested for the cluster."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="SameZone" value="&quot;SameZone&quot;"/>
              <item name="ZoneRedundantPreferred" value="&quot;ZoneRedundantPreferred&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="array<string>" var="$resource.properties.previewFeatures" options="preview-features" group="Properties">
          <help short="List of private endpoint connections."/>
          <item nullable="True" type="string">
            <enum>
              <item name="GeoReplicas" value="&quot;GeoReplicas&quot;"/>
            </enum>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="Whether or not public endpoint access is allowed for this mongo cluster."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.serverVersion" options="server-version" group="Properties">
          <help short="The Mongo DB server version. Defaults to the latest available version if not specified."/>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.sharding" options="sharding" group="Properties">
          <help short="The sharding properties of the mongo cluster."/>
          <arg nullable="True" type="integer32" var="$resource.properties.sharding.shardCount" options="shard-count">
            <help short="Number of shards to provision on the cluster."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.storage" options="storage" group="Properties">
          <help short="The storage properties of the mongo cluster."/>
          <arg nullable="True" type="integer64" var="$resource.properties.storage.sizeGb" options="size-gb">
            <help short="The size of the data disk assigned to each server."/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="MongoClusters_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}">
          <request method="get">
            <path>
              <param type="string" name="mongoClusterName" arg="$Path.mongoClusterName" required="True">
                <format pattern="^[a-z0-9]+(-[a-z0-9]+)*" maxLength="40" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="MongoCluster_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DocumentDB/mongoClusters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="administrator">
                      <prop type="string" name="userName"/>
                    </prop>
                    <prop type="object" name="backup">
                      <prop readOnly="True" type="string" name="earliestRestoreTime"/>
                    </prop>
                    <prop readOnly="True" type="string" name="clusterStatus">
                      <enum>
                        <item value="&quot;Dropping&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                        <item value="&quot;Starting&quot;"/>
                        <item value="&quot;Stopped&quot;"/>
                        <item value="&quot;Stopping&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="compute">
                      <prop type="string" name="tier"/>
                    </prop>
                    <prop readOnly="True" type="string" name="connectionString"/>
                    <prop type="object" name="dataApi">
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="highAvailability">
                      <prop type="string" name="targetMode">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;SameZone&quot;"/>
                          <item value="&quot;ZoneRedundantPreferred&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="infrastructureVersion"/>
                    <prop type="array<string>" name="previewFeatures">
                      <item type="string">
                        <enum>
                          <item value="&quot;GeoReplicas&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Dropping&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="replica">
                      <prop readOnly="True" type="string" name="replicationState">
                        <enum>
                          <item value="&quot;Active&quot;"/>
                          <item value="&quot;Broken&quot;"/>
                          <item value="&quot;Catchup&quot;"/>
                          <item value="&quot;Provisioning&quot;"/>
                          <item value="&quot;Reconfiguring&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="role">
                        <enum>
                          <item value="&quot;AsyncReplica&quot;"/>
                          <item value="&quot;GeoAsyncReplica&quot;"/>
                          <item value="&quot;Primary&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="sourceResourceId"/>
                    </prop>
                    <prop type="string" name="serverVersion"/>
                    <prop type="object" name="sharding">
                      <prop type="integer32" name="shardCount"/>
                    </prop>
                    <prop type="object" name="storage">
                      <prop type="integer64" name="sizeGb"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="object" name="administrator" arg="$resource.properties.administrator">
                  <prop type="password" name="password" arg="$resource.properties.administrator.password" secret="True"/>
                  <prop type="string" name="userName" arg="$resource.properties.administrator.userName"/>
                </prop>
                <prop type="object" name="compute" arg="$resource.properties.compute">
                  <prop type="string" name="tier" arg="$resource.properties.compute.tier"/>
                </prop>
                <prop type="object" name="dataApi" arg="$resource.properties.dataApi">
                  <prop type="string" name="mode" arg="$resource.properties.dataApi.mode">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="object" name="highAvailability" arg="$resource.properties.highAvailability">
                  <prop type="string" name="targetMode" arg="$resource.properties.highAvailability.targetMode">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;SameZone&quot;"/>
                      <item value="&quot;ZoneRedundantPreferred&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="array<string>" name="previewFeatures" arg="$resource.properties.previewFeatures">
                  <item type="string">
                    <enum>
                      <item value="&quot;GeoReplicas&quot;"/>
                    </enum>
                  </item>
                </prop>
                <prop type="string" name="publicNetworkAccess" arg="$resource.properties.publicNetworkAccess">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="serverVersion" arg="$resource.properties.serverVersion"/>
                <prop type="object" name="sharding" arg="$resource.properties.sharding">
                  <prop type="integer32" name="shardCount" arg="$resource.properties.sharding.shardCount"/>
                </prop>
                <prop type="object" name="storage" arg="$resource.properties.storage">
                  <prop type="integer64" name="sizeGb" arg="$resource.properties.storage.sizeGb"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="MongoClusters_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}">
          <request method="put">
            <path>
              <param type="string" name="mongoClusterName" arg="$Path.mongoClusterName" required="True">
                <format pattern="^[a-z0-9]+(-[a-z0-9]+)*" maxLength="40" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@MongoCluster_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
