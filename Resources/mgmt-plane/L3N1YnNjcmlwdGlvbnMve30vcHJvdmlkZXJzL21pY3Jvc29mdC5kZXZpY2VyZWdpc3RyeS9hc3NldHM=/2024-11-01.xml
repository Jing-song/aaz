<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.deviceregistry/assets" version="2024-11-01" swagger="mgmt-plane/deviceregistry/ResourceProviders/Microsoft.DeviceRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkRldmljZVJlZ2lzdHJ5L2Fzc2V0cw==/V/MjAyNC0xMS0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.deviceregistry/assets" version="2024-11-01" swagger="mgmt-plane/deviceregistry/ResourceProviders/Microsoft.DeviceRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2aWNlUmVnaXN0cnkvYXNzZXRz/V/MjAyNC0xMS0wMQ=="/>
  <commandGroup name="device-registry asset">
    <command name="list" version="2024-11-01">
      <resource id="/subscriptions/{}/providers/microsoft.deviceregistry/assets" version="2024-11-01" swagger="mgmt-plane/deviceregistry/ResourceProviders/Microsoft.DeviceRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkRldmljZVJlZ2lzdHJ5L2Fzc2V0cw==/V/MjAyNC0xMS0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.deviceregistry/assets" version="2024-11-01" swagger="mgmt-plane/deviceregistry/ResourceProviders/Microsoft.DeviceRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2aWNlUmVnaXN0cnkvYXNzZXRz/V/MjAyNC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_Assets_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <condition var="$Condition_Assets_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_Assets_ListBySubscription" operationId="Assets_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/assets">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop type="object" name="extendedLocation" required="True">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="type" required="True"/>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DeviceRegistry/assets/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="assetEndpointProfileRef" required="True"/>
                        <prop type="object" name="attributes">
                          <additionalProp anyType="True"/>
                        </prop>
                        <prop type="array<object>" name="datasets">
                          <item type="object">
                            <prop type="array<object>" name="dataPoints">
                              <item type="object">
                                <prop type="string" name="dataPointConfiguration"/>
                                <prop type="string" name="dataSource" required="True"/>
                                <prop type="string" name="name" required="True"/>
                                <prop type="string" name="observabilityMode">
                                  <default value="&quot;None&quot;"/>
                                  <enum>
                                    <item value="&quot;Counter&quot;"/>
                                    <item value="&quot;Gauge&quot;"/>
                                    <item value="&quot;Histogram&quot;"/>
                                    <item value="&quot;Log&quot;"/>
                                    <item value="&quot;None&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="datasetConfiguration"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="@Topic_read" name="topic"/>
                          </item>
                        </prop>
                        <prop type="string" name="defaultDatasetsConfiguration"/>
                        <prop type="string" name="defaultEventsConfiguration"/>
                        <prop type="object" name="defaultTopic" cls="Topic_read">
                          <prop type="string" name="path" required="True"/>
                          <prop type="string" name="retain">
                            <default value="&quot;Never&quot;"/>
                            <enum>
                              <item value="&quot;Keep&quot;"/>
                              <item value="&quot;Never&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="description"/>
                        <prop type="array<string>" name="discoveredAssetRefs">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="displayName"/>
                        <prop type="string" name="documentationUri"/>
                        <prop type="boolean" name="enabled"/>
                        <prop type="array<object>" name="events">
                          <item type="object">
                            <prop type="string" name="eventConfiguration"/>
                            <prop type="string" name="eventNotifier" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="observabilityMode">
                              <default value="&quot;None&quot;"/>
                              <enum>
                                <item value="&quot;Log&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@Topic_read" name="topic"/>
                          </item>
                        </prop>
                        <prop type="string" name="externalAssetId"/>
                        <prop type="string" name="hardwareRevision"/>
                        <prop type="string" name="manufacturer"/>
                        <prop type="string" name="manufacturerUri"/>
                        <prop type="string" name="model"/>
                        <prop type="string" name="productCode"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="serialNumber"/>
                        <prop type="string" name="softwareRevision"/>
                        <prop readOnly="True" type="object" name="status">
                          <prop readOnly="True" type="array<object>" name="datasets">
                            <item type="object">
                              <prop readOnly="True" type="object" name="messageSchemaReference" cls="MessageSchemaReference_read">
                                <prop readOnly="True" type="string" name="schemaName"/>
                                <prop readOnly="True" type="string" name="schemaRegistryNamespace"/>
                                <prop readOnly="True" type="string" name="schemaVersion"/>
                              </prop>
                              <prop readOnly="True" type="string" name="name"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="errors">
                            <item type="object">
                              <prop readOnly="True" type="integer32" name="code"/>
                              <prop readOnly="True" type="string" name="message"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="events">
                            <item type="object">
                              <prop readOnly="True" type="@MessageSchemaReference_read" name="messageSchemaReference"/>
                              <prop readOnly="True" type="string" name="name"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="integer64" name="version"/>
                        </prop>
                        <prop readOnly="True" type="string" name="uuid"/>
                        <prop readOnly="True" type="integer64" name="version"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Assets_ListByResourceGroup" operationId="Assets_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assets">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop type="object" name="extendedLocation" required="True">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="type" required="True"/>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DeviceRegistry/assets/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="assetEndpointProfileRef" required="True"/>
                        <prop type="object" name="attributes">
                          <additionalProp anyType="True"/>
                        </prop>
                        <prop type="array<object>" name="datasets">
                          <item type="object">
                            <prop type="array<object>" name="dataPoints">
                              <item type="object">
                                <prop type="string" name="dataPointConfiguration"/>
                                <prop type="string" name="dataSource" required="True"/>
                                <prop type="string" name="name" required="True"/>
                                <prop type="string" name="observabilityMode">
                                  <default value="&quot;None&quot;"/>
                                  <enum>
                                    <item value="&quot;Counter&quot;"/>
                                    <item value="&quot;Gauge&quot;"/>
                                    <item value="&quot;Histogram&quot;"/>
                                    <item value="&quot;Log&quot;"/>
                                    <item value="&quot;None&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="datasetConfiguration"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="@Topic_read" name="topic"/>
                          </item>
                        </prop>
                        <prop type="string" name="defaultDatasetsConfiguration"/>
                        <prop type="string" name="defaultEventsConfiguration"/>
                        <prop type="@Topic_read" name="defaultTopic"/>
                        <prop type="string" name="description"/>
                        <prop type="array<string>" name="discoveredAssetRefs">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="displayName"/>
                        <prop type="string" name="documentationUri"/>
                        <prop type="boolean" name="enabled"/>
                        <prop type="array<object>" name="events">
                          <item type="object">
                            <prop type="string" name="eventConfiguration"/>
                            <prop type="string" name="eventNotifier" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="observabilityMode">
                              <default value="&quot;None&quot;"/>
                              <enum>
                                <item value="&quot;Log&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@Topic_read" name="topic"/>
                          </item>
                        </prop>
                        <prop type="string" name="externalAssetId"/>
                        <prop type="string" name="hardwareRevision"/>
                        <prop type="string" name="manufacturer"/>
                        <prop type="string" name="manufacturerUri"/>
                        <prop type="string" name="model"/>
                        <prop type="string" name="productCode"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="serialNumber"/>
                        <prop type="string" name="softwareRevision"/>
                        <prop readOnly="True" type="object" name="status">
                          <prop readOnly="True" type="array<object>" name="datasets">
                            <item type="object">
                              <prop readOnly="True" type="@MessageSchemaReference_read" name="messageSchemaReference"/>
                              <prop readOnly="True" type="string" name="name"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="errors">
                            <item type="object">
                              <prop readOnly="True" type="integer32" name="code"/>
                              <prop readOnly="True" type="string" name="message"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="events">
                            <item type="object">
                              <prop readOnly="True" type="@MessageSchemaReference_read" name="messageSchemaReference"/>
                              <prop readOnly="True" type="string" name="name"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="integer64" name="version"/>
                        </prop>
                        <prop readOnly="True" type="string" name="uuid"/>
                        <prop readOnly="True" type="integer64" name="version"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
